{
  "id": "e193ca1e94a1a6e18f1c88a28f1ebe29",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.9",
  "solcLongVersion": "0.8.9+commit.e5eed63a",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Relay.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"./Types.sol\";\n\ncontract Relay is Types {\n    /// @dev Current set of business clients\n    mapping(address => bool) public isBusiness;\n\n    /// @dev Not yet added business clients\n    mapping(address => bool) public pendingBusinesses;\n\n    /// @dev Current set of managers\n    mapping(address => bool) public isManager;\n\n    /// @dev Rewards the relay received for operations\n    uint256 public rewards;\n\n    /// @dev Current set of charity clients\n    mapping(address => bool) public isCharity;\n    /// @dev Not yet added charity clients\n    mapping(address => bool) public pendingCharities;\n\n    uint256 public transactionsCount;\n\n    mapping(uint256 => Transaction) public transactions;\n\n    event ManagerAdded(\n        address indexed addedManager\n    );\n\n    event ManagerRemoved(\n        address indexed addedManager\n    );\n\n    event TransactionAdded(\n        uint256 indexed transactionId,\n        address indexed business\n    );\n\n    event TransactionPaid(\n        uint256 indexed transactionId,\n        address indexed business\n    );\n\n    event Withdrawal(\n        uint256 amount,\n        address indexed manager\n    );\n\n    constructor(address manager) {\n        isManager[manager] = true;\n    }\n\n    /// businesses management\n    function addNewBusiness(address business) public {\n        pendingBusinesses[business] = true;\n    }\n\n    function approveBusiness(address business) public onlyManager {\n        pendingBusinesses[business] = false;\n        isBusiness[business] = true;\n    }\n\n    function removeBusiness(address business) public onlyManager {\n        isBusiness[business] = false;\n    }\n\n    /// charities management\n    function addNewCharity(address charity) public {\n        pendingCharities[charity] = true;\n    }\n\n    function approveCharity(address charity) public onlyManager {\n        pendingCharities[charity] = false;\n        isCharity[charity] = true;\n    }\n\n    function removeCharity(address charity) public onlyManager {\n        isCharity[charity] = false;\n    }\n\n    /// manager management\n    function addManager(address manager) public onlyManager {\n        isManager[manager] = true;\n    }\n\n    function generateTransaction(\n        address client,\n        TransactionPiece[] memory pieces,\n        uint256 fee\n    ) public onlyManager {\n        require(pieces.length > 0, \"Charities are empty\");\n        require(isBusiness[client], \"Client is not our client\");\n\n        transactions[transactionsCount].client = client;\n        transactions[transactionsCount].fee = fee;\n        transactions[transactionsCount].piecesCount = pieces.length;\n        transactions[transactionsCount].paid = false;\n\n        for (uint256 i = 0; i < pieces.length; i++) {\n            require(isCharity[pieces[i].destination], \"One of the destinations is not an approved charity\");\n            require(pieces[i].value > 0, \"Donations should be non-zero\");\n            transactions[transactionsCount].pieces[i] = pieces[i];\n        }\n\n        emit TransactionAdded(transactionsCount, client);\n        transactionsCount++;\n    }\n\n    function executeTransaction(\n        uint256 transactionId\n    ) public payable onlyBusiness transactionExists(transactionId) {\n        Transaction storage transaction = transactions[transactionId];\n\n        require(transaction.client == msg.sender, \"The transaction is for another client\");\n        require(!transaction.paid, \"Transaction is paid already\");\n\n        uint256 totalPayment = 0;\n        for (uint256 i = 0; i < transaction.piecesCount; i++) {\n            totalPayment += transaction.pieces[i].value;\n        }\n\n        require(totalPayment + transaction.fee <= msg.value, \"The value is not enough to cover the transaction\");\n\n        for (uint256 i = 0; i < transaction.piecesCount; i++) {\n            _sendFundsTo(transaction.pieces[i].destination, transaction.pieces[i].value);\n        }\n\n        transaction.paid = true;\n        rewards += msg.value - totalPayment;\n\n        emit TransactionPaid(transactionId, transaction.client);\n    }\n\n    function withdraw() public onlyManager {\n        require(rewards > 0, \"Nothing to withdraw\");\n\n        emit Withdrawal(rewards, msg.sender);\n\n        _sendFundsTo(msg.sender, rewards);\n        rewards = 0;\n    }\n\n    fallback() external payable {}\n\n    receive() external payable {}\n\n    /**\n     * @dev Internal function to send excess rewards back to the bridge\n     */\n    function _sendFundsTo(address to, uint256 _funds) internal {\n        (bool sent, ) = to.call{value: _funds}(\"\");\n\n        require(sent, \"Failed to send funds\");\n    }\n\n    modifier onlyManager() {\n        if (!isManager[msg.sender]) revert(\"Sender is not the approved manager\");\n        _;\n    }\n\n    modifier onlyBusiness() {\n        if (!isBusiness[msg.sender]) revert(\"Sender is not the approved business\");\n        _;\n    }\n\n    modifier transactionExists(uint256 transactionId) {\n        if (transactions[transactionId].client == address(0))\n            revert(\"Transaction doesn't exist.\");\n        _;\n    }\n}\n"
      },
      "contracts/Types.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\n/// @title Types\n/// @dev Source file that keeps type definitions\nabstract contract Types {\n\n    /// @dev Charity transaction proposal. For Clients to sign and execute\n    struct TransactionPiece {\n        address destination;\n        uint256 value;\n    }\n\n    /// @dev Charity transaction proposal. For Clients to sign and execute\n    struct Transaction {\n        address client;\n        mapping(uint256 => TransactionPiece) pieces;\n        uint256 piecesCount;\n        uint256 fee;\n        bool paid;\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "evmVersion": "london",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/Relay.sol": {
        "Relay": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "manager",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "addedManager",
                  "type": "address"
                }
              ],
              "name": "ManagerAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "addedManager",
                  "type": "address"
                }
              ],
              "name": "ManagerRemoved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "transactionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "business",
                  "type": "address"
                }
              ],
              "name": "TransactionAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "transactionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "business",
                  "type": "address"
                }
              ],
              "name": "TransactionPaid",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "manager",
                  "type": "address"
                }
              ],
              "name": "Withdrawal",
              "type": "event"
            },
            {
              "stateMutability": "payable",
              "type": "fallback"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "manager",
                  "type": "address"
                }
              ],
              "name": "addManager",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "business",
                  "type": "address"
                }
              ],
              "name": "addNewBusiness",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "charity",
                  "type": "address"
                }
              ],
              "name": "addNewCharity",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "business",
                  "type": "address"
                }
              ],
              "name": "approveBusiness",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "charity",
                  "type": "address"
                }
              ],
              "name": "approveCharity",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "transactionId",
                  "type": "uint256"
                }
              ],
              "name": "executeTransaction",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "client",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "destination",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Types.TransactionPiece[]",
                  "name": "pieces",
                  "type": "tuple[]"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "name": "generateTransaction",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isBusiness",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isCharity",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isManager",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "pendingBusinesses",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "pendingCharities",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "business",
                  "type": "address"
                }
              ],
              "name": "removeBusiness",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "charity",
                  "type": "address"
                }
              ],
              "name": "removeCharity",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rewards",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "transactions",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "client",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "piecesCount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "paid",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "transactionsCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_77": {
                  "entryPoint": null,
                  "id": 77,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address_fromMemory": {
                  "entryPoint": 86,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:306:2",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:2",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "95:209:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "141:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "150:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "153:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "143:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "143:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "143:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "116:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "125:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "112:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "112:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "137:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "108:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "108:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "105:52:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "166:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "185:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "179:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "179:16:2"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "170:5:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "258:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "267:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "270:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "260:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "260:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "260:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "217:5:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "228:5:2"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "243:3:2",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "248:1:2",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "239:3:2"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "239:11:2"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "252:1:2",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "235:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "235:19:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "224:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "224:31:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "214:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "214:42:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "207:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "207:50:2"
                              },
                              "nodeType": "YulIf",
                              "src": "204:70:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "283:15:2",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "293:5:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "283:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "61:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "72:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "84:6:2",
                            "type": ""
                          }
                        ],
                        "src": "14:290:2"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
                  "id": 2,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506040516110b63803806110b683398101604081905261002f91610056565b6001600160a01b03166000908152600260205260409020805460ff19166001179055610086565b60006020828403121561006857600080fd5b81516001600160a01b038116811461007f57600080fd5b9392505050565b611021806100956000396000f3fe6080604052600436106101015760003560e01c80639ec5a8941161008f578063e81ffbef11610061578063e81ffbef14610384578063ee22610b146103b4578063f3ae2415146103c7578063fd99a746146103f7578063fddd43871461040d57005b80639ec5a894146102ce578063abefe591146102f2578063db20a88714610312578063e725a4be1461034257005b80632d06177a116100d35780632d06177a146101de5780633ccfd60b146101fe578063419b96fa1461021357806345810583146102335780639ace38c21461025357005b80631466d0191461010a578063166cd8501461014f5780631702e2dc1461018e57806327b616cd146101ae57005b3661010857005b005b34801561011657600080fd5b5061013a610125366004610d99565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561015b57600080fd5b5061010861016a366004610d99565b6001600160a01b03166000908152600560205260409020805460ff19166001179055565b34801561019a57600080fd5b506101086101a9366004610e2b565b61042d565b3480156101ba57600080fd5b5061013a6101c9366004610d99565b60016020526000908152604090205460ff1681565b3480156101ea57600080fd5b506101086101f9366004610d99565b61074c565b34801561020a57600080fd5b5061010861079f565b34801561021f57600080fd5b5061010861022e366004610d99565b610861565b34801561023f57600080fd5b5061010861024e366004610d99565b6108b1565b34801561025f57600080fd5b506102a261026e366004610f1a565b60076020526000908152604090208054600282015460038301546004909301546001600160a01b0390921692909160ff1684565b604080516001600160a01b03909516855260208501939093529183015215156060820152608001610146565b3480156102da57600080fd5b506102e460035481565b604051908152602001610146565b3480156102fe57600080fd5b5061010861030d366004610d99565b610919565b34801561031e57600080fd5b5061013a61032d366004610d99565b60056020526000908152604090205460ff1681565b34801561034e57600080fd5b5061010861035d366004610d99565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b34801561039057600080fd5b5061013a61039f366004610d99565b60046020526000908152604090205460ff1681565b6101086103c2366004610f1a565b610969565b3480156103d357600080fd5b5061013a6103e2366004610d99565b60026020526000908152604090205460ff1681565b34801561040357600080fd5b506102e460065481565b34801561041957600080fd5b50610108610428366004610d99565b610c79565b3360009081526002602052604090205460ff166104655760405162461bcd60e51b815260040161045c90610f33565b60405180910390fd5b60008251116104ac5760405162461bcd60e51b81526020600482015260136024820152724368617269746965732061726520656d70747960681b604482015260640161045c565b6001600160a01b03831660009081526020819052604090205460ff166105145760405162461bcd60e51b815260206004820152601860248201527f436c69656e74206973206e6f74206f757220636c69656e740000000000000000604482015260640161045c565b6006805460009081526007602052604080822080546001600160a01b0319166001600160a01b038816179055825482528082206003018490558451835483528183206002015591548152908120600401805460ff191690555b82518110156106f9576004600084838151811061058c5761058c610f75565b602090810291909101810151516001600160a01b031682528101919091526040016000205460ff1661061b5760405162461bcd60e51b815260206004820152603260248201527f4f6e65206f66207468652064657374696e6174696f6e73206973206e6f7420616044820152716e20617070726f766564206368617269747960701b606482015260840161045c565b600083828151811061062f5761062f610f75565b602002602001015160200151116106885760405162461bcd60e51b815260206004820152601c60248201527f446f6e6174696f6e732073686f756c64206265206e6f6e2d7a65726f00000000604482015260640161045c565b82818151811061069a5761069a610f75565b6020908102919091018101516006546000908152600783526040808220858352600190810185529120825181546001600160a01b0319166001600160a01b039091161781559190920151910155806106f181610fa1565b91505061056d565b506006546040516001600160a01b03851691907f5fd655308280ca8f5b685114cfe87b25b8f728b401240adcc0a98e877e3e29cd90600090a36006805490600061074283610fa1565b9190505550505050565b3360009081526002602052604090205460ff1661077b5760405162461bcd60e51b815260040161045c90610f33565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b3360009081526002602052604090205460ff166107ce5760405162461bcd60e51b815260040161045c90610f33565b6000600354116108165760405162461bcd60e51b81526020600482015260136024820152724e6f7468696e6720746f20776974686472617760681b604482015260640161045c565b60035460405190815233907fd964a27d45f595739c13d8b1160b57491050cacf3a2e5602207277d6228f64ee9060200160405180910390a261085a33600354610cde565b6000600355565b3360009081526002602052604090205460ff166108905760405162461bcd60e51b815260040161045c90610f33565b6001600160a01b03166000908152602081905260409020805460ff19169055565b3360009081526002602052604090205460ff166108e05760405162461bcd60e51b815260040161045c90610f33565b6001600160a01b03166000908152600560209081526040808320805460ff19908116909155600490925290912080549091166001179055565b3360009081526002602052604090205460ff166109485760405162461bcd60e51b815260040161045c90610f33565b6001600160a01b03166000908152600460205260409020805460ff19169055565b3360009081526020819052604090205460ff166109d45760405162461bcd60e51b815260206004820152602360248201527f53656e646572206973206e6f742074686520617070726f76656420627573696e60448201526265737360e81b606482015260840161045c565b60008181526007602052604090205481906001600160a01b0316610a3a5760405162461bcd60e51b815260206004820152601a60248201527f5472616e73616374696f6e20646f65736e27742065786973742e000000000000604482015260640161045c565b600082815260076020526040902080546001600160a01b03163314610aaf5760405162461bcd60e51b815260206004820152602560248201527f546865207472616e73616374696f6e20697320666f7220616e6f7468657220636044820152641b1a595b9d60da1b606482015260840161045c565b600481015460ff1615610b045760405162461bcd60e51b815260206004820152601b60248201527f5472616e73616374696f6e206973207061696420616c72656164790000000000604482015260640161045c565b6000805b8260020154811015610b46576000818152600180850160205260409091200154610b329083610fbc565b915080610b3e81610fa1565b915050610b08565b5034826003015482610b589190610fbc565b1115610bbf5760405162461bcd60e51b815260206004820152603060248201527f5468652076616c7565206973206e6f7420656e6f75676820746f20636f76657260448201526f103a3432903a3930b739b0b1ba34b7b760811b606482015260840161045c565b60005b8260020154811015610c0a576000818152600180850160205260409091208054910154610bf8916001600160a01b031690610cde565b80610c0281610fa1565b915050610bc2565b5060048201805460ff19166001179055610c248134610fd4565b60036000828254610c359190610fbc565b909155505081546040516001600160a01b039091169085907f1048322214c2376910cb9740dec280cf85a1375be08c0db6dd0413edc8c49c8e90600090a350505050565b3360009081526002602052604090205460ff16610ca85760405162461bcd60e51b815260040161045c90610f33565b6001600160a01b03166000908152600160208181526040808420805460ff19908116909155918490529092208054909216179055565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610d2b576040519150601f19603f3d011682016040523d82523d6000602084013e610d30565b606091505b5050905080610d785760405162461bcd60e51b81526020600482015260146024820152734661696c656420746f2073656e642066756e647360601b604482015260640161045c565b505050565b80356001600160a01b0381168114610d9457600080fd5b919050565b600060208284031215610dab57600080fd5b610db482610d7d565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610df457610df4610dbb565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e2357610e23610dbb565b604052919050565b600080600060608486031215610e4057600080fd5b610e4984610d7d565b925060208085013567ffffffffffffffff80821115610e6757600080fd5b818701915087601f830112610e7b57600080fd5b813581811115610e8d57610e8d610dbb565b610e9b848260051b01610dfa565b818152848101925060069190911b830184019089821115610ebb57600080fd5b928401925b81841015610f05576040848b031215610ed95760008081fd5b610ee1610dd1565b610eea85610d7d565b81528486013586820152835260409093019291840191610ec0565b96999698505050506040949094013593505050565b600060208284031215610f2c57600080fd5b5035919050565b60208082526022908201527f53656e646572206973206e6f742074686520617070726f766564206d616e616760408201526132b960f11b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610fb557610fb5610f8b565b5060010190565b60008219821115610fcf57610fcf610f8b565b500190565b600082821015610fe657610fe6610f8b565b50039056fea26469706673582212208a4d9096f87bfea001ac990dba9ca7f71c36db0117e186eda0549b3619cf568064736f6c63430008090033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x10B6 CODESIZE SUB DUP1 PUSH2 0x10B6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x86 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1021 DUP1 PUSH2 0x95 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x101 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9EC5A894 GT PUSH2 0x8F JUMPI DUP1 PUSH4 0xE81FFBEF GT PUSH2 0x61 JUMPI DUP1 PUSH4 0xE81FFBEF EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xEE22610B EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0xF3AE2415 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xFD99A746 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xFDDD4387 EQ PUSH2 0x40D JUMPI STOP JUMPDEST DUP1 PUSH4 0x9EC5A894 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xABEFE591 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xDB20A887 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xE725A4BE EQ PUSH2 0x342 JUMPI STOP JUMPDEST DUP1 PUSH4 0x2D06177A GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x2D06177A EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x419B96FA EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x45810583 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x9ACE38C2 EQ PUSH2 0x253 JUMPI STOP JUMPDEST DUP1 PUSH4 0x1466D019 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x166CD850 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x1702E2DC EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x27B616CD EQ PUSH2 0x1AE JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0x108 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2B JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x74C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x79F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x861 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x8B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A2 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x146 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E4 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x30D CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x39F CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xF1A JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x3E2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E4 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x465 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45C SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4368617269746965732061726520656D707479 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x514 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C69656E74206973206E6F74206F757220636C69656E740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45C JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE DUP3 SLOAD DUP3 MSTORE DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD DUP5 SWAP1 SSTORE DUP5 MLOAD DUP4 SLOAD DUP4 MSTORE DUP2 DUP4 KECCAK256 PUSH1 0x2 ADD SSTORE SWAP2 SLOAD DUP2 MSTORE SWAP1 DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x4 PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x58C JUMPI PUSH2 0x58C PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x61B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E65206F66207468652064657374696E6174696F6E73206973206E6F742061 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x6E20617070726F7665642063686172697479 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x62F JUMPI PUSH2 0x62F PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD GT PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F6E6174696F6E732073686F756C64206265206E6F6E2D7A65726F00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45C JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x69A JUMPI PUSH2 0x69A PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP4 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD DUP6 MSTORE SWAP2 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP2 SWAP1 SWAP3 ADD MLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0x6F1 DUP2 PUSH2 0xFA1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x56D JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 SWAP1 PUSH32 0x5FD655308280CA8F5B685114CFE87B25B8F728B401240ADCC0A98E877E3E29CD SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x6 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x742 DUP4 PUSH2 0xFA1 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x77B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45C SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45C SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD GT PUSH2 0x816 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F7468696E6720746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0xD964A27D45F595739C13D8B1160B57491050CACF3A2E5602207277D6228F64EE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x85A CALLER PUSH1 0x3 SLOAD PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x890 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45C SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x8E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45C SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x948 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45C SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x9D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E646572206973206E6F742074686520617070726F76656420627573696E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20646F65736E27742065786973742E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865207472616E73616374696F6E20697320666F7220616E6F746865722063 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1B1A595B9D PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45C JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206973207061696420616C72656164790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45C JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 PUSH1 0x2 ADD SLOAD DUP2 LT ISZERO PUSH2 0xB46 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0xB32 SWAP1 DUP4 PUSH2 0xFBC JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xB3E DUP2 PUSH2 0xFA1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB08 JUMP JUMPDEST POP CALLVALUE DUP3 PUSH1 0x3 ADD SLOAD DUP3 PUSH2 0xB58 SWAP2 SWAP1 PUSH2 0xFBC JUMP JUMPDEST GT ISZERO PUSH2 0xBBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652076616C7565206973206E6F7420656E6F75676820746F20636F766572 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x103A3432903A3930B739B0B1BA34B7B7 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x2 ADD SLOAD DUP2 LT ISZERO PUSH2 0xC0A JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH2 0xBF8 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xCDE JUMP JUMPDEST DUP1 PUSH2 0xC02 DUP2 PUSH2 0xFA1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBC2 JUMP JUMPDEST POP PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xC24 DUP2 CALLVALUE PUSH2 0xFD4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC35 SWAP2 SWAP1 PUSH2 0xFBC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH32 0x1048322214C2376910CB9740DEC280CF85A1375BE08C0DB6DD0413EDC8C49C8E SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xCA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45C SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE SWAP2 DUP5 SWAP1 MSTORE SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD2B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4661696C656420746F2073656E642066756E6473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45C JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB4 DUP3 PUSH2 0xD7D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xDF4 JUMPI PUSH2 0xDF4 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE23 JUMPI PUSH2 0xE23 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE49 DUP5 PUSH2 0xD7D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP1 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE8D JUMPI PUSH2 0xE8D PUSH2 0xDBB JUMP JUMPDEST PUSH2 0xE9B DUP5 DUP3 PUSH1 0x5 SHL ADD PUSH2 0xDFA JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP3 POP PUSH1 0x6 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP10 DUP3 GT ISZERO PUSH2 0xEBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0xF05 JUMPI PUSH1 0x40 DUP5 DUP12 SUB SLT ISZERO PUSH2 0xED9 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xEE1 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0xEEA DUP6 PUSH2 0xD7D JUMP JUMPDEST DUP2 MSTORE DUP5 DUP7 ADD CALLDATALOAD DUP7 DUP3 ADD MSTORE DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0xEC0 JUMP JUMPDEST SWAP7 SWAP10 SWAP7 SWAP9 POP POP POP POP PUSH1 0x40 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x53656E646572206973206E6F742074686520617070726F766564206D616E6167 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xFB5 JUMPI PUSH2 0xFB5 PUSH2 0xF8B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xFCF JUMPI PUSH2 0xFCF PUSH2 0xF8B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xFE6 JUMPI PUSH2 0xFE6 PUSH2 0xF8B JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0x4D SWAP1 SWAP7 0xF8 PUSH28 0xFEA001AC990DBA9CA7F71C36DB0117E186EDA0549B3619CF56806473 PUSH16 0x6C634300080900330000000000000000 ",
              "sourceMap": "80:4988:0:-:0;;;1200:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1239:18:0;;;;;:9;:18;;;;;:25;;-1:-1:-1;;1239:25:0;1260:4;1239:25;;;80:4988;;14:290:2;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:2;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:2:o;:::-;80:4988:0;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_444": {
                  "entryPoint": null,
                  "id": 444,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_448": {
                  "entryPoint": null,
                  "id": 448,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_sendFundsTo_471": {
                  "entryPoint": 3294,
                  "id": 471,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@addManager_186": {
                  "entryPoint": 1868,
                  "id": 186,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@addNewBusiness_90": {
                  "entryPoint": null,
                  "id": 90,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@addNewCharity_137": {
                  "entryPoint": null,
                  "id": 137,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@approveBusiness_110": {
                  "entryPoint": 3193,
                  "id": 110,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@approveCharity_157": {
                  "entryPoint": 2225,
                  "id": 157,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@executeTransaction_411": {
                  "entryPoint": 2409,
                  "id": 411,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@generateTransaction_296": {
                  "entryPoint": 1069,
                  "id": 296,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@isBusiness_9": {
                  "entryPoint": null,
                  "id": 9,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@isCharity_27": {
                  "entryPoint": null,
                  "id": 27,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@isManager_19": {
                  "entryPoint": null,
                  "id": 19,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@pendingBusinesses_14": {
                  "entryPoint": null,
                  "id": 14,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@pendingCharities_32": {
                  "entryPoint": null,
                  "id": 32,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@removeBusiness_124": {
                  "entryPoint": 2145,
                  "id": 124,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@removeCharity_171": {
                  "entryPoint": 2329,
                  "id": 171,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@rewards_22": {
                  "entryPoint": null,
                  "id": 22,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@transactionsCount_34": {
                  "entryPoint": null,
                  "id": 34,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@transactions_39": {
                  "entryPoint": null,
                  "id": 39,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@withdraw_440": {
                  "entryPoint": 1951,
                  "id": 440,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 3453,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 3481,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_array$_t_struct$_TransactionPiece_$528_memory_ptr_$dyn_memory_ptrt_uint256": {
                  "entryPoint": 3627,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 3866,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_42a23b32e1997957967e5eaec75b8a77a5536aba8ef1e7cfdca469579be7d5a1__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_59f6d684760f156897c40dbf90fd6be2ffe21046acca4d964e635b9d11834727__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_5e95d684f42cab2ff15133fcd43e1d5db9de86446693f530969878d05b93d4de__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 3891,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_6ccad9b42603510aa2281dc09de0f29ec7380180d77b1d766639429fee61ba0f__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_baa064595565d0eaa4a85ec26857c4753d05b8165d8c48d267ec62a331e12801__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_bd0dc32ab7ed1b97da9d2212661f5c93367cc4e24b898aa1bcc9e197f18e36ca__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_c42b03636ac1dbce3b94c6a259bf96be5c0cb587dea1c106a6e08b351ca8f844__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_c6ab5e45c4ffc5ecd741bf25ae1c177fe12ad8cf83ddd74d1228b4ec6c26128c__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_c70a41f76464a3580bf1b34c897bf8b0c04d5880c3a2e5bdaddd57d2b332b614__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_d9076ece29b2a72c6dc53197c8c0c74503ef75330f9143b5293adcd7920ceedc__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_e4bc7969c24c69922bc65ce3614f03bf1832ea0935377f20a73f8be5e473f4db__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 3578,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory_1382": {
                  "entryPoint": 3537,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 4028,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 4052,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "increment_t_uint256": {
                  "entryPoint": 4001,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 3979,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 3957,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 3515,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:8835:2",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:2",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "63:124:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "73:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "82:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "82:20:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "73:5:2"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "165:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "174:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "177:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "167:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "167:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "167:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "124:5:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "135:5:2"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "150:3:2",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "155:1:2",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "146:3:2"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "146:11:2"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "159:1:2",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "142:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "142:19:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "131:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "131:31:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "121:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "121:42:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "114:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "114:50:2"
                              },
                              "nodeType": "YulIf",
                              "src": "111:70:2"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "42:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:2",
                            "type": ""
                          }
                        ],
                        "src": "14:173:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "262:116:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "308:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "317:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "320:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "310:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "310:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "310:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "283:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "292:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "279:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "279:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "304:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "275:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "275:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "272:52:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "333:39:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "362:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "343:18:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "343:29:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "333:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "228:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "239:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "251:6:2",
                            "type": ""
                          }
                        ],
                        "src": "192:186:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "478:92:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "488:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "500:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "511:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "496:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "496:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "488:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "530:9:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "555:6:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "548:6:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "548:14:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "541:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "541:22:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "523:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "523:41:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "523:41:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "447:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "458:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "469:4:2",
                            "type": ""
                          }
                        ],
                        "src": "383:187:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "607:95:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "624:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "631:3:2",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "636:10:2",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "627:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "627:20:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "617:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "617:31:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "617:31:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "664:1:2",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "667:4:2",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "657:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "657:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "657:15:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "688:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "691:4:2",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "681:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "681:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "681:15:2"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "575:127:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "753:211:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "763:21:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "779:4:2",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "773:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "773:11:2"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "763:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "793:35:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "815:6:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "823:4:2",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "811:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "811:17:2"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "797:10:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "903:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "905:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "905:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "905:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "846:10:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "858:18:2",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "843:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "843:34:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "882:10:2"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "894:6:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "879:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "879:22:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "840:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "840:62:2"
                              },
                              "nodeType": "YulIf",
                              "src": "837:88:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "941:4:2",
                                    "type": "",
                                    "value": "0x40"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "947:10:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "934:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "934:24:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "934:24:2"
                            }
                          ]
                        },
                        "name": "allocate_memory_1382",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "742:6:2",
                            "type": ""
                          }
                        ],
                        "src": "707:257:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1014:230:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1024:19:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1040:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1034:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1034:9:2"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1024:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1052:58:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1074:6:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "size",
                                            "nodeType": "YulIdentifier",
                                            "src": "1090:4:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1096:2:2",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1086:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1086:13:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1105:2:2",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "1101:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1101:7:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1082:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1082:27:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1070:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1070:40:2"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1056:10:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1185:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1187:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1187:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1187:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1128:10:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1140:18:2",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1125:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1125:34:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1164:10:2"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1176:6:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1161:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1161:22:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "1122:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1122:62:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1119:88:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1223:2:2",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1227:10:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1216:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1216:22:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1216:22:2"
                            }
                          ]
                        },
                        "name": "allocate_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "994:4:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "1003:6:2",
                            "type": ""
                          }
                        ],
                        "src": "969:275:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1411:1231:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1457:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1466:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1469:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1459:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1459:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1459:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1432:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1441:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1428:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1428:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1453:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1424:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1424:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1421:52:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1482:39:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1511:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1492:18:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1492:29:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1482:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1530:12:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1540:2:2",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1534:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1551:46:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1582:9:2"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1593:2:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1578:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1578:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1565:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1565:32:2"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1555:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1606:28:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1616:18:2",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "1610:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1661:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1670:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1673:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1663:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1663:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1663:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1649:6:2"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1657:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1646:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1646:14:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1643:34:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1686:32:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1700:9:2"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1711:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1696:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1696:22:2"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "1690:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1766:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1775:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1778:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1768:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1768:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1768:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "1745:2:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1749:4:2",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1741:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1741:13:2"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1756:7:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1737:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1737:27:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1730:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1730:35:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1727:55:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1791:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1814:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1801:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1801:16:2"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulTypedName",
                                  "src": "1795:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1840:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1842:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1842:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1842:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1832:2:2"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1836:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1829:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1829:10:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1826:36:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1871:47:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1906:1:2",
                                            "type": "",
                                            "value": "5"
                                          },
                                          {
                                            "name": "_4",
                                            "nodeType": "YulIdentifier",
                                            "src": "1909:2:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "1902:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1902:10:2"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1914:2:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1898:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1898:19:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1882:15:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1882:36:2"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "1875:3:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1927:16:2",
                              "value": {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "1940:3:2"
                              },
                              "variables": [
                                {
                                  "name": "dst_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1931:5:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "1959:3:2"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1964:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1952:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1952:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1952:15:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1976:19:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "1987:3:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1992:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1983:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1983:12:2"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1976:3:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2004:42:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "2026:2:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2034:1:2",
                                            "type": "",
                                            "value": "6"
                                          },
                                          {
                                            "name": "_4",
                                            "nodeType": "YulIdentifier",
                                            "src": "2037:2:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "2030:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2030:10:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2022:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2022:19:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2043:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2018:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2018:28:2"
                              },
                              "variables": [
                                {
                                  "name": "srcEnd",
                                  "nodeType": "YulTypedName",
                                  "src": "2008:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2078:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2087:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2090:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2080:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2080:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2080:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2061:6:2"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2069:7:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2058:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2058:19:2"
                              },
                              "nodeType": "YulIf",
                              "src": "2055:39:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2103:22:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "2118:2:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2122:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2114:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2114:11:2"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nodeType": "YulTypedName",
                                  "src": "2107:3:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2192:367:2",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "2250:74:2",
                                      "statements": [
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "2268:11:2",
                                          "value": {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2278:1:2",
                                            "type": "",
                                            "value": "0"
                                          },
                                          "variables": [
                                            {
                                              "name": "_5",
                                              "nodeType": "YulTypedName",
                                              "src": "2272:2:2",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "_5",
                                                "nodeType": "YulIdentifier",
                                                "src": "2303:2:2"
                                              },
                                              {
                                                "name": "_5",
                                                "nodeType": "YulIdentifier",
                                                "src": "2307:2:2"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "2296:6:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2296:14:2"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "2296:14:2"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dataEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "2217:7:2"
                                            },
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "2226:3:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sub",
                                            "nodeType": "YulIdentifier",
                                            "src": "2213:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2213:17:2"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2232:4:2",
                                          "type": "",
                                          "value": "0x40"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "slt",
                                        "nodeType": "YulIdentifier",
                                        "src": "2209:3:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2209:28:2"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "2206:118:2"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2337:35:2",
                                    "value": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "allocate_memory_1382",
                                        "nodeType": "YulIdentifier",
                                        "src": "2350:20:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2350:22:2"
                                    },
                                    "variables": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulTypedName",
                                        "src": "2341:5:2",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "2392:5:2"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "2418:3:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "abi_decode_address",
                                            "nodeType": "YulIdentifier",
                                            "src": "2399:18:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2399:23:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2385:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2385:38:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2385:38:2"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "value",
                                              "nodeType": "YulIdentifier",
                                              "src": "2447:5:2"
                                            },
                                            {
                                              "name": "_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "2454:2:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2443:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2443:14:2"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2476:3:2"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2481:2:2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2472:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2472:12:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "calldataload",
                                            "nodeType": "YulIdentifier",
                                            "src": "2459:12:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2459:26:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2436:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2436:50:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2436:50:2"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "2506:3:2"
                                        },
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "2511:5:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2499:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2499:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2499:18:2"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2530:19:2",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "2541:3:2"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2546:2:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2537:3:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2537:12:2"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "2530:3:2"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "2145:3:2"
                                  },
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2150:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2142:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2142:15:2"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "2158:25:2",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2160:21:2",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "2171:3:2"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2176:4:2",
                                          "type": "",
                                          "value": "0x40"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2167:3:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2167:14:2"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "2160:3:2"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "2138:3:2",
                                "statements": []
                              },
                              "src": "2134:425:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2568:15:2",
                              "value": {
                                "name": "dst_1",
                                "nodeType": "YulIdentifier",
                                "src": "2578:5:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2568:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2592:44:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2619:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2630:4:2",
                                        "type": "",
                                        "value": "0x40"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2615:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2615:20:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2602:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2602:34:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2592:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_array$_t_struct$_TransactionPiece_$528_memory_ptr_$dyn_memory_ptrt_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1361:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1372:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1384:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1392:6:2",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1400:6:2",
                            "type": ""
                          }
                        ],
                        "src": "1249:1393:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2717:110:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2763:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2772:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2775:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2765:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2765:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2765:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2738:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2747:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2734:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2734:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2759:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2730:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2730:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "2727:52:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2788:33:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2811:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2798:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2798:23:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2788:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2683:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2694:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2706:6:2",
                            "type": ""
                          }
                        ],
                        "src": "2647:180:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3011:248:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3021:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3033:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3044:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3029:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3029:19:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3021:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3064:9:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3079:6:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3095:3:2",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3100:1:2",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "3091:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3091:11:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3104:1:2",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "3087:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3087:19:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3075:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3075:32:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3057:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3057:51:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3057:51:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3128:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3139:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3124:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3124:18:2"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3144:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3117:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3117:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3117:34:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3171:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3182:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3167:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3167:18:2"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "3187:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3160:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3160:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3160:34:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3214:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3225:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3210:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3210:18:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value3",
                                            "nodeType": "YulIdentifier",
                                            "src": "3244:6:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "3237:6:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3237:14:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "3230:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3230:22:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3203:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3203:50:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3203:50:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2956:9:2",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "2967:6:2",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2975:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2983:6:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2991:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3002:4:2",
                            "type": ""
                          }
                        ],
                        "src": "2832:427:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3365:76:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3375:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3387:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3398:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3383:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3383:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3375:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3417:9:2"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3428:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3410:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3410:25:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3410:25:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3334:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3345:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3356:4:2",
                            "type": ""
                          }
                        ],
                        "src": "3264:177:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3620:224:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3637:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3648:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3630:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3630:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3630:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3671:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3682:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3667:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3667:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3687:2:2",
                                    "type": "",
                                    "value": "34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3660:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3660:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3660:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3710:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3721:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3706:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3706:18:2"
                                  },
                                  {
                                    "hexValue": "53656e646572206973206e6f742074686520617070726f766564206d616e6167",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3726:34:2",
                                    "type": "",
                                    "value": "Sender is not the approved manag"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3699:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3699:62:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3699:62:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3781:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3792:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3777:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3777:18:2"
                                  },
                                  {
                                    "hexValue": "6572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3797:4:2",
                                    "type": "",
                                    "value": "er"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3770:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3770:32:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3770:32:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3811:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3823:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3834:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3819:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3819:19:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3811:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5e95d684f42cab2ff15133fcd43e1d5db9de86446693f530969878d05b93d4de__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3597:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3611:4:2",
                            "type": ""
                          }
                        ],
                        "src": "3446:398:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4023:169:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4040:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4051:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4033:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4033:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4033:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4074:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4085:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4070:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4070:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4090:2:2",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4063:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4063:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4063:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4113:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4124:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4109:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4109:18:2"
                                  },
                                  {
                                    "hexValue": "4368617269746965732061726520656d707479",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4129:21:2",
                                    "type": "",
                                    "value": "Charities are empty"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4102:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4102:49:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4102:49:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4160:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4172:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4183:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4168:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4168:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4160:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e4bc7969c24c69922bc65ce3614f03bf1832ea0935377f20a73f8be5e473f4db__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4000:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4014:4:2",
                            "type": ""
                          }
                        ],
                        "src": "3849:343:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4371:174:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4388:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4399:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4381:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4381:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4381:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4422:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4433:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4418:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4418:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4438:2:2",
                                    "type": "",
                                    "value": "24"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4411:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4411:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4411:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4461:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4472:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4457:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4457:18:2"
                                  },
                                  {
                                    "hexValue": "436c69656e74206973206e6f74206f757220636c69656e74",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4477:26:2",
                                    "type": "",
                                    "value": "Client is not our client"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4450:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4450:54:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4450:54:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4513:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4525:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4536:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4521:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4521:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4513:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c6ab5e45c4ffc5ecd741bf25ae1c177fe12ad8cf83ddd74d1228b4ec6c26128c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4348:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4362:4:2",
                            "type": ""
                          }
                        ],
                        "src": "4197:348:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4582:95:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4599:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4606:3:2",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4611:10:2",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4602:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4602:20:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4592:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4592:31:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4592:31:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4639:1:2",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4642:4:2",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4632:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4632:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4632:15:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4663:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4666:4:2",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "4656:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4656:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4656:15:2"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "4550:127:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4856:240:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4873:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4884:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4866:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4866:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4866:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4907:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4918:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4903:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4903:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4923:2:2",
                                    "type": "",
                                    "value": "50"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4896:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4896:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4896:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4946:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4957:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4942:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4942:18:2"
                                  },
                                  {
                                    "hexValue": "4f6e65206f66207468652064657374696e6174696f6e73206973206e6f742061",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4962:34:2",
                                    "type": "",
                                    "value": "One of the destinations is not a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4935:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4935:62:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4935:62:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5017:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5028:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5013:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5013:18:2"
                                  },
                                  {
                                    "hexValue": "6e20617070726f7665642063686172697479",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5033:20:2",
                                    "type": "",
                                    "value": "n approved charity"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5006:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5006:48:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5006:48:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5063:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5075:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5086:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5071:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5071:19:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5063:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_59f6d684760f156897c40dbf90fd6be2ffe21046acca4d964e635b9d11834727__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4833:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4847:4:2",
                            "type": ""
                          }
                        ],
                        "src": "4682:414:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5275:178:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5292:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5303:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5285:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5285:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5285:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5326:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5337:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5322:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5322:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5342:2:2",
                                    "type": "",
                                    "value": "28"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5315:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5315:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5315:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5365:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5376:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5361:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5361:18:2"
                                  },
                                  {
                                    "hexValue": "446f6e6174696f6e732073686f756c64206265206e6f6e2d7a65726f",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5381:30:2",
                                    "type": "",
                                    "value": "Donations should be non-zero"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5354:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5354:58:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5354:58:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5421:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5433:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5444:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5429:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5429:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5421:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c70a41f76464a3580bf1b34c897bf8b0c04d5880c3a2e5bdaddd57d2b332b614__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5252:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5266:4:2",
                            "type": ""
                          }
                        ],
                        "src": "5101:352:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5490:95:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5507:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5514:3:2",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5519:10:2",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "5510:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5510:20:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5500:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5500:31:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5500:31:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5547:1:2",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5550:4:2",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5540:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5540:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5540:15:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5571:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5574:4:2",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5564:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5564:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5564:15:2"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "5458:127:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5637:88:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5668:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5670:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5670:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5670:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5653:5:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5664:1:2",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "5660:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5660:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "5650:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5650:17:2"
                              },
                              "nodeType": "YulIf",
                              "src": "5647:43:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5699:20:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5710:5:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5717:1:2",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5706:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5706:13:2"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "5699:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5619:5:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "5629:3:2",
                            "type": ""
                          }
                        ],
                        "src": "5590:135:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5904:169:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5921:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5932:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5914:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5914:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5914:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5955:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5966:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5951:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5951:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5971:2:2",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5944:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5944:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5944:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5994:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6005:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5990:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5990:18:2"
                                  },
                                  {
                                    "hexValue": "4e6f7468696e6720746f207769746864726177",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6010:21:2",
                                    "type": "",
                                    "value": "Nothing to withdraw"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5983:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5983:49:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5983:49:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6041:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6053:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6064:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6049:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6049:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6041:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5881:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5895:4:2",
                            "type": ""
                          }
                        ],
                        "src": "5730:343:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6252:225:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6269:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6280:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6262:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6262:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6262:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6303:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6314:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6299:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6299:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6319:2:2",
                                    "type": "",
                                    "value": "35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6292:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6292:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6292:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6342:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6353:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6338:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6338:18:2"
                                  },
                                  {
                                    "hexValue": "53656e646572206973206e6f742074686520617070726f76656420627573696e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6358:34:2",
                                    "type": "",
                                    "value": "Sender is not the approved busin"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6331:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6331:62:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6331:62:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6413:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6424:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6409:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6409:18:2"
                                  },
                                  {
                                    "hexValue": "657373",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6429:5:2",
                                    "type": "",
                                    "value": "ess"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6402:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6402:33:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6402:33:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6444:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6456:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6467:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6452:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6452:19:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6444:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_baa064595565d0eaa4a85ec26857c4753d05b8165d8c48d267ec62a331e12801__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6229:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6243:4:2",
                            "type": ""
                          }
                        ],
                        "src": "6078:399:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6656:176:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6673:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6684:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6666:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6666:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6666:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6707:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6718:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6703:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6703:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6723:2:2",
                                    "type": "",
                                    "value": "26"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6696:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6696:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6696:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6746:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6757:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6742:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6742:18:2"
                                  },
                                  {
                                    "hexValue": "5472616e73616374696f6e20646f65736e27742065786973742e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6762:28:2",
                                    "type": "",
                                    "value": "Transaction doesn't exist."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6735:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6735:56:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6735:56:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6800:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6812:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6823:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6808:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6808:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6800:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c42b03636ac1dbce3b94c6a259bf96be5c0cb587dea1c106a6e08b351ca8f844__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6633:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6647:4:2",
                            "type": ""
                          }
                        ],
                        "src": "6482:350:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7011:227:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7028:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7039:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7021:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7021:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7021:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7062:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7073:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7058:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7058:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7078:2:2",
                                    "type": "",
                                    "value": "37"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7051:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7051:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7051:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7101:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7112:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7097:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7097:18:2"
                                  },
                                  {
                                    "hexValue": "546865207472616e73616374696f6e20697320666f7220616e6f746865722063",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7117:34:2",
                                    "type": "",
                                    "value": "The transaction is for another c"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7090:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7090:62:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7090:62:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7172:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7183:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7168:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7168:18:2"
                                  },
                                  {
                                    "hexValue": "6c69656e74",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7188:7:2",
                                    "type": "",
                                    "value": "lient"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7161:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7161:35:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7161:35:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7205:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7217:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7228:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7213:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7213:19:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7205:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_bd0dc32ab7ed1b97da9d2212661f5c93367cc4e24b898aa1bcc9e197f18e36ca__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6988:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7002:4:2",
                            "type": ""
                          }
                        ],
                        "src": "6837:401:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7417:177:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7434:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7445:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7427:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7427:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7427:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7468:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7479:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7464:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7464:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7484:2:2",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7457:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7457:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7457:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7507:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7518:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7503:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7503:18:2"
                                  },
                                  {
                                    "hexValue": "5472616e73616374696f6e206973207061696420616c7265616479",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7523:29:2",
                                    "type": "",
                                    "value": "Transaction is paid already"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7496:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7496:57:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7496:57:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7562:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7574:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7585:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7570:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7570:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7562:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_42a23b32e1997957967e5eaec75b8a77a5536aba8ef1e7cfdca469579be7d5a1__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7394:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7408:4:2",
                            "type": ""
                          }
                        ],
                        "src": "7243:351:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7647:80:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7674:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "7676:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7676:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7676:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "7663:1:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "7670:1:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "7666:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7666:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7660:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7660:13:2"
                              },
                              "nodeType": "YulIf",
                              "src": "7657:39:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7705:16:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "7716:1:2"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "7719:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7712:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7712:9:2"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "7705:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "7630:1:2",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "7633:1:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "7639:3:2",
                            "type": ""
                          }
                        ],
                        "src": "7599:128:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7906:238:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7923:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7934:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7916:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7916:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7916:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7957:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7968:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7953:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7953:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7973:2:2",
                                    "type": "",
                                    "value": "48"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7946:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7946:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7946:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7996:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8007:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7992:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7992:18:2"
                                  },
                                  {
                                    "hexValue": "5468652076616c7565206973206e6f7420656e6f75676820746f20636f766572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8012:34:2",
                                    "type": "",
                                    "value": "The value is not enough to cover"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7985:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7985:62:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7985:62:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8067:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8078:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8063:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8063:18:2"
                                  },
                                  {
                                    "hexValue": "20746865207472616e73616374696f6e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8083:18:2",
                                    "type": "",
                                    "value": " the transaction"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8056:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8056:46:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8056:46:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8111:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8123:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8134:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8119:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8119:19:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8111:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d9076ece29b2a72c6dc53197c8c0c74503ef75330f9143b5293adcd7920ceedc__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7883:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7897:4:2",
                            "type": ""
                          }
                        ],
                        "src": "7732:412:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8198:76:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8220:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "8222:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8222:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8222:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "8214:1:2"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "8217:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8211:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8211:8:2"
                              },
                              "nodeType": "YulIf",
                              "src": "8208:34:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8251:17:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "8263:1:2"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "8266:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "8259:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8259:9:2"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "8251:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "8180:1:2",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "8183:1:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "8189:4:2",
                            "type": ""
                          }
                        ],
                        "src": "8149:125:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8470:14:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8472:10:2",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8479:3:2"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8472:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8454:3:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8462:3:2",
                            "type": ""
                          }
                        ],
                        "src": "8279:205:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8663:170:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8680:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8691:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8673:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8673:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8673:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8714:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8725:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8710:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8710:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8730:2:2",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8703:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8703:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8703:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8753:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8764:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8749:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8749:18:2"
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e642066756e6473",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8769:22:2",
                                    "type": "",
                                    "value": "Failed to send funds"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8742:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8742:50:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8742:50:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8801:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8813:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8824:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8809:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8809:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8801:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_6ccad9b42603510aa2281dc09de0f29ec7380180d77b1d766639429fee61ba0f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8640:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8654:4:2",
                            "type": ""
                          }
                        ],
                        "src": "8489:344:2"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_1382() -> memPtr\n    {\n        memPtr := mload(0x40)\n        let newFreePtr := add(memPtr, 0x40)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(0x40, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_struct$_TransactionPiece_$528_memory_ptr_$dyn_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let dst := allocate_memory(add(shl(5, _4), _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, shl(6, _4)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, 0x40) }\n        {\n            if slt(sub(dataEnd, src), 0x40)\n            {\n                let _5 := 0\n                revert(_5, _5)\n            }\n            let value := allocate_memory_1382()\n            mstore(value, abi_decode_address(src))\n            mstore(add(value, _1), calldataload(add(src, _1)))\n            mstore(dst, value)\n            dst := add(dst, _1)\n        }\n        value1 := dst_1\n        value2 := calldataload(add(headStart, 0x40))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_5e95d684f42cab2ff15133fcd43e1d5db9de86446693f530969878d05b93d4de__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Sender is not the approved manag\")\n        mstore(add(headStart, 96), \"er\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e4bc7969c24c69922bc65ce3614f03bf1832ea0935377f20a73f8be5e473f4db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Charities are empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c6ab5e45c4ffc5ecd741bf25ae1c177fe12ad8cf83ddd74d1228b4ec6c26128c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Client is not our client\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_59f6d684760f156897c40dbf90fd6be2ffe21046acca4d964e635b9d11834727__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"One of the destinations is not a\")\n        mstore(add(headStart, 96), \"n approved charity\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c70a41f76464a3580bf1b34c897bf8b0c04d5880c3a2e5bdaddd57d2b332b614__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Donations should be non-zero\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Nothing to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baa064595565d0eaa4a85ec26857c4753d05b8165d8c48d267ec62a331e12801__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Sender is not the approved busin\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c42b03636ac1dbce3b94c6a259bf96be5c0cb587dea1c106a6e08b351ca8f844__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Transaction doesn't exist.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bd0dc32ab7ed1b97da9d2212661f5c93367cc4e24b898aa1bcc9e197f18e36ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"The transaction is for another c\")\n        mstore(add(headStart, 96), \"lient\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_42a23b32e1997957967e5eaec75b8a77a5536aba8ef1e7cfdca469579be7d5a1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Transaction is paid already\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_d9076ece29b2a72c6dc53197c8c0c74503ef75330f9143b5293adcd7920ceedc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"The value is not enough to cover\")\n        mstore(add(headStart, 96), \" the transaction\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_6ccad9b42603510aa2281dc09de0f29ec7380180d77b1d766639429fee61ba0f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Failed to send funds\")\n        tail := add(headStart, 96)\n    }\n}",
                  "id": 2,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x101 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9EC5A894 GT PUSH2 0x8F JUMPI DUP1 PUSH4 0xE81FFBEF GT PUSH2 0x61 JUMPI DUP1 PUSH4 0xE81FFBEF EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xEE22610B EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0xF3AE2415 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xFD99A746 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xFDDD4387 EQ PUSH2 0x40D JUMPI STOP JUMPDEST DUP1 PUSH4 0x9EC5A894 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xABEFE591 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xDB20A887 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xE725A4BE EQ PUSH2 0x342 JUMPI STOP JUMPDEST DUP1 PUSH4 0x2D06177A GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x2D06177A EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x419B96FA EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x45810583 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x9ACE38C2 EQ PUSH2 0x253 JUMPI STOP JUMPDEST DUP1 PUSH4 0x1466D019 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x166CD850 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x1702E2DC EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x27B616CD EQ PUSH2 0x1AE JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0x108 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2B JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x74C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x79F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x861 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x8B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A2 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x146 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E4 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x30D CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x39F CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xF1A JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x3E2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E4 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x465 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45C SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4368617269746965732061726520656D707479 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x514 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C69656E74206973206E6F74206F757220636C69656E740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45C JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE DUP3 SLOAD DUP3 MSTORE DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD DUP5 SWAP1 SSTORE DUP5 MLOAD DUP4 SLOAD DUP4 MSTORE DUP2 DUP4 KECCAK256 PUSH1 0x2 ADD SSTORE SWAP2 SLOAD DUP2 MSTORE SWAP1 DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x4 PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x58C JUMPI PUSH2 0x58C PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x61B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E65206F66207468652064657374696E6174696F6E73206973206E6F742061 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x6E20617070726F7665642063686172697479 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x62F JUMPI PUSH2 0x62F PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD GT PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F6E6174696F6E732073686F756C64206265206E6F6E2D7A65726F00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45C JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x69A JUMPI PUSH2 0x69A PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP4 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD DUP6 MSTORE SWAP2 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP2 SWAP1 SWAP3 ADD MLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0x6F1 DUP2 PUSH2 0xFA1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x56D JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 SWAP1 PUSH32 0x5FD655308280CA8F5B685114CFE87B25B8F728B401240ADCC0A98E877E3E29CD SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x6 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x742 DUP4 PUSH2 0xFA1 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x77B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45C SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45C SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD GT PUSH2 0x816 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F7468696E6720746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0xD964A27D45F595739C13D8B1160B57491050CACF3A2E5602207277D6228F64EE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x85A CALLER PUSH1 0x3 SLOAD PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x890 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45C SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x8E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45C SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x948 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45C SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x9D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E646572206973206E6F742074686520617070726F76656420627573696E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20646F65736E27742065786973742E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865207472616E73616374696F6E20697320666F7220616E6F746865722063 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1B1A595B9D PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45C JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206973207061696420616C72656164790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45C JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 PUSH1 0x2 ADD SLOAD DUP2 LT ISZERO PUSH2 0xB46 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0xB32 SWAP1 DUP4 PUSH2 0xFBC JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xB3E DUP2 PUSH2 0xFA1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB08 JUMP JUMPDEST POP CALLVALUE DUP3 PUSH1 0x3 ADD SLOAD DUP3 PUSH2 0xB58 SWAP2 SWAP1 PUSH2 0xFBC JUMP JUMPDEST GT ISZERO PUSH2 0xBBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652076616C7565206973206E6F7420656E6F75676820746F20636F766572 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x103A3432903A3930B739B0B1BA34B7B7 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x2 ADD SLOAD DUP2 LT ISZERO PUSH2 0xC0A JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH2 0xBF8 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xCDE JUMP JUMPDEST DUP1 PUSH2 0xC02 DUP2 PUSH2 0xFA1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBC2 JUMP JUMPDEST POP PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xC24 DUP2 CALLVALUE PUSH2 0xFD4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC35 SWAP2 SWAP1 PUSH2 0xFBC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH32 0x1048322214C2376910CB9740DEC280CF85A1375BE08C0DB6DD0413EDC8C49C8E SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xCA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45C SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE SWAP2 DUP5 SWAP1 MSTORE SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD2B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4661696C656420746F2073656E642066756E6473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45C JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB4 DUP3 PUSH2 0xD7D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xDF4 JUMPI PUSH2 0xDF4 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE23 JUMPI PUSH2 0xE23 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE49 DUP5 PUSH2 0xD7D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP1 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE8D JUMPI PUSH2 0xE8D PUSH2 0xDBB JUMP JUMPDEST PUSH2 0xE9B DUP5 DUP3 PUSH1 0x5 SHL ADD PUSH2 0xDFA JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP3 POP PUSH1 0x6 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP10 DUP3 GT ISZERO PUSH2 0xEBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0xF05 JUMPI PUSH1 0x40 DUP5 DUP12 SUB SLT ISZERO PUSH2 0xED9 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xEE1 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0xEEA DUP6 PUSH2 0xD7D JUMP JUMPDEST DUP2 MSTORE DUP5 DUP7 ADD CALLDATALOAD DUP7 DUP3 ADD MSTORE DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0xEC0 JUMP JUMPDEST SWAP7 SWAP10 SWAP7 SWAP9 POP POP POP POP PUSH1 0x40 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x53656E646572206973206E6F742074686520617070726F766564206D616E6167 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xFB5 JUMPI PUSH2 0xFB5 PUSH2 0xF8B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xFCF JUMPI PUSH2 0xFCF PUSH2 0xF8B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xFE6 JUMPI PUSH2 0xFE6 PUSH2 0xF8B JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0x4D SWAP1 SWAP7 0xF8 PUSH28 0xFEA001AC990DBA9CA7F71C36DB0117E186EDA0549B3619CF56806473 PUSH16 0x6C634300080900330000000000000000 ",
              "sourceMap": "80:4988:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;155:42;;;;;;;;;;-1:-1:-1;155:42:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;548:14:2;;541:22;523:41;;511:2;496:18;155:42:0;;;;;;;;1711:96;;;;;;;;;;-1:-1:-1;1711:96:0;;;;;:::i;:::-;-1:-1:-1;;;;;1768:25:0;;;;;:16;:25;;;;;:32;;-1:-1:-1;;1768:32:0;1796:4;1768:32;;;1711:96;2203:907;;;;;;;;;;-1:-1:-1;2203:907:0;;;;;:::i;:::-;;:::i;248:49::-;;;;;;;;;;-1:-1:-1;248:49:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;2099:98;;;;;;;;;;-1:-1:-1;2099:98:0;;;;;:::i;:::-;;:::i;4077:211::-;;;;;;;;;;;;;:::i;1570:106::-;;;;;;;;;;-1:-1:-1;1570:106:0;;;;;:::i;:::-;;:::i;1813:145::-;;;;;;;;;;-1:-1:-1;1813:145:0;;;;;:::i;:::-;;:::i;701:51::-;;;;;;;;;;-1:-1:-1;701:51:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;701:51:0;;;;;;;;;;;;;;-1:-1:-1;;;;;3075:32:2;;;3057:51;;3139:2;3124:18;;3117:34;;;;3167:18;;;3160:34;3237:14;3230:22;3225:2;3210:18;;3203:50;3044:3;3029:19;701:51:0;2832:427:2;444:22:0;;;;;;;;;;;;;;;;;;;3410:25:2;;;3398:2;3383:18;444:22:0;3264:177:2;1964:102:0;;;;;;;;;;-1:-1:-1;1964:102:0;;;;;:::i;:::-;;:::i;607:48::-;;;;;;;;;;-1:-1:-1;607:48:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;1307:100;;;;;;;;;;-1:-1:-1;1307:100:0;;;;;:::i;:::-;-1:-1:-1;;;;;1366:27:0;;;;;1396:4;1366:27;;;;;;;;:34;;-1:-1:-1;;1366:34:0;;;;;;1307:100;517:41;;;;;;;;;;-1:-1:-1;517:41:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;3116:955;;;;;;:::i;:::-;;:::i;341:41::-;;;;;;;;;;-1:-1:-1;341:41:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;662:32;;;;;;;;;;;;;;;;1413:151;;;;;;;;;;-1:-1:-1;1413:151:0;;;;;:::i;:::-;;:::i;2203:907::-;4673:10;4663:21;;;;:9;:21;;;;;;;;4658:72;;4686:44;;-1:-1:-1;;;4686:44:0;;;;;;;:::i;:::-;;;;;;;;4658:72;2378:1:::1;2362:6;:13;:17;2354:49;;;::::0;-1:-1:-1;;;2354:49:0;;4051:2:2;2354:49:0::1;::::0;::::1;4033:21:2::0;4090:2;4070:18;;;4063:30;-1:-1:-1;;;4109:18:2;;;4102:49;4168:18;;2354:49:0::1;3849:343:2::0;2354:49:0::1;-1:-1:-1::0;;;;;2421:18:0;::::1;:10;:18:::0;;;::::1;::::0;;;;;;;::::1;;2413:55;;;::::0;-1:-1:-1;;;2413:55:0;;4399:2:2;2413:55:0::1;::::0;::::1;4381:21:2::0;4438:2;4418:18;;;4411:30;4477:26;4457:18;;;4450:54;4521:18;;2413:55:0::1;4197:348:2::0;2413:55:0::1;2492:17;::::0;;2479:31:::1;::::0;;;:12:::1;:31;::::0;;;;;:47;;-1:-1:-1;;;;;;2479:47:0::1;-1:-1:-1::0;;;;;2479:47:0;::::1;;::::0;;2549:17;;2536:31;;;;;:35:::1;;:41:::0;;;2633:13;;2600:17;;2587:31;;;;;:43:::1;;:59:::0;2669:17;;2656:31;;;;;:36:::1;;:44:::0;;-1:-1:-1;;2656:44:0::1;::::0;;2711:305:::1;2735:6;:13;2731:1;:17;2711:305;;;2777:9;:32;2787:6;2794:1;2787:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;:21;-1:-1:-1;;;;;2777:32:0::1;::::0;;;::::1;::::0;;;;;;2787:21:::1;2777:32:::0;;::::1;;2769:95;;;::::0;-1:-1:-1;;;2769:95:0;;4884:2:2;2769:95:0::1;::::0;::::1;4866:21:2::0;4923:2;4903:18;;;4896:30;4962:34;4942:18;;;4935:62;-1:-1:-1;;;5013:18:2;;;5006:48;5071:19;;2769:95:0::1;4682:414:2::0;2769:95:0::1;2904:1;2886:6;2893:1;2886:9;;;;;;;;:::i;:::-;;;;;;;:15;;;:19;2878:60;;;::::0;-1:-1:-1;;;2878:60:0;;5303:2:2;2878:60:0::1;::::0;::::1;5285:21:2::0;5342:2;5322:18;;;5315:30;5381;5361:18;;;5354:58;5429:18;;2878:60:0::1;5101:352:2::0;2878:60:0::1;2996:6;3003:1;2996:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;2965:17:::1;::::0;2952:31:::1;::::0;;;:12:::1;:31:::0;;;;;;:41;;;:38:::1;::::0;;::::1;:41:::0;;;;:53;;;;-1:-1:-1;;;;;;2952:53:0::1;-1:-1:-1::0;;;;;2952:53:0;;::::1;;::::0;;;;;::::1;::::0;;::::1;::::0;:41;2750:3:::1;2952:41:::0;2750:3:::1;:::i;:::-;;;;2711:305;;;-1:-1:-1::0;3048:17:0::1;::::0;3031:43:::1;::::0;-1:-1:-1;;;;;3031:43:0;::::1;::::0;3048:17;3031:43:::1;::::0;;;::::1;3084:17;:19:::0;;;:17:::1;:19;::::0;::::1;:::i;:::-;;;;;;2203:907:::0;;;:::o;2099:98::-;4673:10;4663:21;;;;:9;:21;;;;;;;;4658:72;;4686:44;;-1:-1:-1;;;4686:44:0;;;;;;;:::i;4658:72::-;-1:-1:-1;;;;;2165:18:0::1;;::::0;;;:9:::1;:18;::::0;;;;:25;;-1:-1:-1;;2165:25:0::1;2186:4;2165:25;::::0;;2099:98::o;4077:211::-;4673:10;4663:21;;;;:9;:21;;;;;;;;4658:72;;4686:44;;-1:-1:-1;;;4686:44:0;;;;;;;:::i;4658:72::-;4144:1:::1;4134:7;;:11;4126:43;;;::::0;-1:-1:-1;;;4126:43:0;;5932:2:2;4126:43:0::1;::::0;::::1;5914:21:2::0;5971:2;5951:18;;;5944:30;-1:-1:-1;;;5990:18:2;;;5983:49;6049:18;;4126:43:0::1;5730:343:2::0;4126:43:0::1;4196:7;::::0;4185:31:::1;::::0;3410:25:2;;;4205:10:0::1;::::0;4185:31:::1;::::0;3398:2:2;3383:18;4185:31:0::1;;;;;;;4227:33;4240:10;4252:7;;4227:12;:33::i;:::-;4280:1;4270:7;:11:::0;4077:211::o;1570:106::-;4673:10;4663:21;;;;:9;:21;;;;;;;;4658:72;;4686:44;;-1:-1:-1;;;4686:44:0;;;;;;;:::i;4658:72::-;-1:-1:-1;;;;;1641:20:0::1;1664:5;1641:20:::0;;;::::1;::::0;;;;;;:28;;-1:-1:-1;;1641:28:0::1;::::0;;1570:106::o;1813:145::-;4673:10;4663:21;;;;:9;:21;;;;;;;;4658:72;;4686:44;;-1:-1:-1;;;4686:44:0;;;;;;;:::i;4658:72::-;-1:-1:-1;;;;;1883:25:0::1;1911:5;1883:25:::0;;;:16:::1;:25;::::0;;;;;;;:33;;-1:-1:-1;;1883:33:0;;::::1;::::0;;;1926:9:::1;:18:::0;;;;;;:25;;;;::::1;1883:33:::0;1926:25:::1;::::0;;1813:145::o;1964:102::-;4673:10;4663:21;;;;:9;:21;;;;;;;;4658:72;;4686:44;;-1:-1:-1;;;4686:44:0;;;;;;;:::i;4658:72::-;-1:-1:-1;;;;;2033:18:0::1;2054:5;2033:18:::0;;;:9:::1;:18;::::0;;;;:26;;-1:-1:-1;;2033:26:0::1;::::0;;1964:102::o;3116:955::-;4804:10;4793;:22;;;;;;;;;;;;;4788:74;;4817:45;;-1:-1:-1;;;4817:45:0;;6280:2:2;4817:45:0;;;6262:21:2;6319:2;6299:18;;;6292:30;6358:34;6338:18;;;6331:62;-1:-1:-1;;;6409:18:2;;;6402:33;6452:19;;4817:45:0;6078:399:2;4788:74:0;4996:1:::1;4950:27:::0;;;:12:::1;:27;::::0;;;;:34;3227:13;;-1:-1:-1;;;;;4950:34:0::1;4946:102;;5012:36;::::0;-1:-1:-1;;;5012:36:0;;6684:2:2;5012:36:0::1;::::0;::::1;6666:21:2::0;6723:2;6703:18;;;6696:30;6762:28;6742:18;;;6735:56;6808:18;;5012:36:0::1;6482:350:2::0;4946:102:0::1;3252:31:::2;3286:27:::0;;;:12:::2;:27;::::0;;;;3332:18;;-1:-1:-1;;;;;3332:18:0::2;3354:10;3332:32;3324:82;;;::::0;-1:-1:-1;;;3324:82:0;;7039:2:2;3324:82:0::2;::::0;::::2;7021:21:2::0;7078:2;7058:18;;;7051:30;7117:34;7097:18;;;7090:62;-1:-1:-1;;;7168:18:2;;;7161:35;7213:19;;3324:82:0::2;6837:401:2::0;3324:82:0::2;3425:16;::::0;::::2;::::0;::::2;;3424:17;3416:57;;;::::0;-1:-1:-1;;;3416:57:0;;7445:2:2;3416:57:0::2;::::0;::::2;7427:21:2::0;7484:2;7464:18;;;7457:30;7523:29;7503:18;;;7496:57;7570:18;;3416:57:0::2;7243:351:2::0;3416:57:0::2;3484:20;3523:9:::0;3518:122:::2;3542:11;:23;;;3538:1;:27;3518:122;;;3602:21;::::0;;;:18:::2;::::0;;::::2;:21;::::0;;;;;:27:::2;::::0;3586:43:::2;::::0;;::::2;:::i;:::-;::::0;-1:-1:-1;3567:3:0;::::2;::::0;::::2;:::i;:::-;;;;3518:122;;;;3692:9;3673:11;:15;;;3658:12;:30;;;;:::i;:::-;:43;;3650:104;;;::::0;-1:-1:-1;;;3650:104:0;;7934:2:2;3650:104:0::2;::::0;::::2;7916:21:2::0;7973:2;7953:18;;;7946:30;8012:34;7992:18;;;7985:62;-1:-1:-1;;;8063:18:2;;;8056:46;8119:19;;3650:104:0::2;7732:412:2::0;3650:104:0::2;3770:9;3765:155;3789:11;:23;;;3785:1;:27;3765:155;;;3846:21;::::0;;;:18:::2;::::0;;::::2;:21;::::0;;;;;:33;;3881:27;::::2;::::0;3833:76:::2;::::0;-1:-1:-1;;;;;3846:33:0::2;::::0;3833:12:::2;:76::i;:::-;3814:3:::0;::::2;::::0;::::2;:::i;:::-;;;;3765:155;;;-1:-1:-1::0;3930:16:0::2;::::0;::::2;:23:::0;;-1:-1:-1;;3930:23:0::2;3949:4;3930:23;::::0;;3974:24:::2;3986:12:::0;3974:9:::2;:24;:::i;:::-;3963:7;;:35;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4045:18:0;;4014:50:::2;::::0;-1:-1:-1;;;;;4045:18:0;;::::2;::::0;4030:13;;4014:50:::2;::::0;4045:18:::2;::::0;4014:50:::2;3242:829;;4872:1:::1;3116:955:::0;:::o;1413:151::-;4673:10;4663:21;;;;:9;:21;;;;;;;;4658:72;;4686:44;;-1:-1:-1;;;4686:44:0;;;;;;;:::i;4658:72::-;-1:-1:-1;;;;;1485:27:0::1;1515:5;1485:27:::0;;;:17:::1;:27;::::0;;;;;;;:35;;-1:-1:-1;;1485:35:0;;::::1;::::0;;;1530:20;;;;;;;:27;;;;::::1;;::::0;;1413:151::o;4453:166::-;4523:9;4538:2;-1:-1:-1;;;;;4538:7:0;4553:6;4538:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4522:42;;;4583:4;4575:37;;;;-1:-1:-1;;;4575:37:0;;8691:2:2;4575:37:0;;;8673:21:2;8730:2;8710:18;;;8703:30;-1:-1:-1;;;8749:18:2;;;8742:50;8809:18;;4575:37:0;8489:344:2;4575:37:0;4512:107;4453:166;;:::o;14:173:2:-;82:20;;-1:-1:-1;;;;;131:31:2;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:2:o;575:127::-;636:10;631:3;627:20;624:1;617:31;667:4;664:1;657:15;691:4;688:1;681:15;707:257;779:4;773:11;;;811:17;;858:18;843:34;;879:22;;;840:62;837:88;;;905:18;;:::i;:::-;941:4;934:24;707:257;:::o;969:275::-;1040:2;1034:9;1105:2;1086:13;;-1:-1:-1;;1082:27:2;1070:40;;1140:18;1125:34;;1161:22;;;1122:62;1119:88;;;1187:18;;:::i;:::-;1223:2;1216:22;969:275;;-1:-1:-1;969:275:2:o;1249:1393::-;1384:6;1392;1400;1453:2;1441:9;1432:7;1428:23;1424:32;1421:52;;;1469:1;1466;1459:12;1421:52;1492:29;1511:9;1492:29;:::i;:::-;1482:39;;1540:2;1593;1582:9;1578:18;1565:32;1616:18;1657:2;1649:6;1646:14;1643:34;;;1673:1;1670;1663:12;1643:34;1711:6;1700:9;1696:22;1686:32;;1756:7;1749:4;1745:2;1741:13;1737:27;1727:55;;1778:1;1775;1768:12;1727:55;1814:2;1801:16;1836:2;1832;1829:10;1826:36;;;1842:18;;:::i;:::-;1882:36;1914:2;1909;1906:1;1902:10;1898:19;1882:36;:::i;:::-;1952:15;;;1983:12;;;;-1:-1:-1;2034:1:2;2030:10;;;;2022:19;;2018:28;;;2058:19;;;2055:39;;;2090:1;2087;2080:12;2055:39;2114:11;;;;2134:425;2150:6;2145:3;2142:15;2134:425;;;2232:4;2226:3;2217:7;2213:17;2209:28;2206:118;;;2278:1;2307:2;2303;2296:14;2206:118;2350:22;;:::i;:::-;2399:23;2418:3;2399:23;:::i;:::-;2385:38;;2472:12;;;2459:26;2443:14;;;2436:50;2499:18;;2176:4;2167:14;;;;2537:12;;;;2134:425;;;1249:1393;;2578:5;;-1:-1:-1;;;;2630:4:2;2615:20;;;;2602:34;;-1:-1:-1;;;1249:1393:2:o;2647:180::-;2706:6;2759:2;2747:9;2738:7;2734:23;2730:32;2727:52;;;2775:1;2772;2765:12;2727:52;-1:-1:-1;2798:23:2;;2647:180;-1:-1:-1;2647:180:2:o;3446:398::-;3648:2;3630:21;;;3687:2;3667:18;;;3660:30;3726:34;3721:2;3706:18;;3699:62;-1:-1:-1;;;3792:2:2;3777:18;;3770:32;3834:3;3819:19;;3446:398::o;4550:127::-;4611:10;4606:3;4602:20;4599:1;4592:31;4642:4;4639:1;4632:15;4666:4;4663:1;4656:15;5458:127;5519:10;5514:3;5510:20;5507:1;5500:31;5550:4;5547:1;5540:15;5574:4;5571:1;5564:15;5590:135;5629:3;-1:-1:-1;;5650:17:2;;5647:43;;;5670:18;;:::i;:::-;-1:-1:-1;5717:1:2;5706:13;;5590:135::o;7599:128::-;7639:3;7670:1;7666:6;7663:1;7660:13;7657:39;;;7676:18;;:::i;:::-;-1:-1:-1;7712:9:2;;7599:128::o;8149:125::-;8189:4;8217:1;8214;8211:8;8208:34;;;8222:18;;:::i;:::-;-1:-1:-1;8259:9:2;;8149:125::o"
            },
            "methodIdentifiers": {
              "addManager(address)": "2d06177a",
              "addNewBusiness(address)": "e725a4be",
              "addNewCharity(address)": "166cd850",
              "approveBusiness(address)": "fddd4387",
              "approveCharity(address)": "45810583",
              "executeTransaction(uint256)": "ee22610b",
              "generateTransaction(address,(address,uint256)[],uint256)": "1702e2dc",
              "isBusiness(address)": "1466d019",
              "isCharity(address)": "e81ffbef",
              "isManager(address)": "f3ae2415",
              "pendingBusinesses(address)": "27b616cd",
              "pendingCharities(address)": "db20a887",
              "removeBusiness(address)": "419b96fa",
              "removeCharity(address)": "abefe591",
              "rewards()": "9ec5a894",
              "transactions(uint256)": "9ace38c2",
              "transactionsCount()": "fd99a746",
              "withdraw()": "3ccfd60b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedManager\",\"type\":\"address\"}],\"name\":\"ManagerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedManager\",\"type\":\"address\"}],\"name\":\"ManagerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"business\",\"type\":\"address\"}],\"name\":\"TransactionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"business\",\"type\":\"address\"}],\"name\":\"TransactionPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"addManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"business\",\"type\":\"address\"}],\"name\":\"addNewBusiness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"charity\",\"type\":\"address\"}],\"name\":\"addNewCharity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"business\",\"type\":\"address\"}],\"name\":\"approveBusiness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"charity\",\"type\":\"address\"}],\"name\":\"approveCharity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"executeTransaction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct Types.TransactionPiece[]\",\"name\":\"pieces\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"generateTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBusiness\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isCharity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingBusinesses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingCharities\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"business\",\"type\":\"address\"}],\"name\":\"removeBusiness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"charity\",\"type\":\"address\"}],\"name\":\"removeCharity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transactions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"piecesCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"paid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transactionsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"isBusiness\":{\"details\":\"Current set of business clients\"},\"isCharity\":{\"details\":\"Current set of charity clients\"},\"isManager\":{\"details\":\"Current set of managers\"},\"pendingBusinesses\":{\"details\":\"Not yet added business clients\"},\"pendingCharities\":{\"details\":\"Not yet added charity clients\"},\"rewards\":{\"details\":\"Rewards the relay received for operations\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addManager(address)\":{\"notice\":\"manager management\"},\"addNewBusiness(address)\":{\"notice\":\"businesses management\"},\"addNewCharity(address)\":{\"notice\":\"charities management\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Relay.sol\":\"Relay\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Relay.sol\":{\"keccak256\":\"0x18f35a2675b71dd61d02d9e379c9b344e420452893f93189f261dab492f40d92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1b598e54c603bb8f8bb325901bd89b49a1bb3fbc9740cf838229e810a15c44b\",\"dweb:/ipfs/QmNszmsAweybcCukN9Bo99i7bDzEYvpnGoRw8AeVSy2cfR\"]},\"contracts/Types.sol\":{\"keccak256\":\"0xcd0012eb82e18095e934175f4bb16eb0a3359e41f8e820037ce1c352a7d037cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aaf8d88e5ac1888d1a4c32113da7da6ee6ccad8e0354efea48a06272230f8190\",\"dweb:/ipfs/QmPZyrULbAvxag57bZYrjYuyFfpo8fR51aZ4VQcP325ouS\"]}},\"version\":1}"
        }
      },
      "contracts/Types.sol": {
        "Types": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Source file that keeps type definitions\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Types\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Types.sol\":\"Types\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Types.sol\":{\"keccak256\":\"0xcd0012eb82e18095e934175f4bb16eb0a3359e41f8e820037ce1c352a7d037cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aaf8d88e5ac1888d1a4c32113da7da6ee6ccad8e0354efea48a06272230f8190\",\"dweb:/ipfs/QmPZyrULbAvxag57bZYrjYuyFfpo8fR51aZ4VQcP325ouS\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/Relay.sol": {
        "ast": {
          "absolutePath": "contracts/Relay.sol",
          "exportedSymbols": {
            "Relay": [
              520
            ],
            "Types": [
              543
            ]
          },
          "id": 521,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".9"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "absolutePath": "contracts/Types.sol",
              "file": "./Types.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 521,
              "sourceUnit": 544,
              "src": "57:21:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 3,
                    "name": "Types",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 543,
                    "src": "98:5:0"
                  },
                  "id": 4,
                  "nodeType": "InheritanceSpecifier",
                  "src": "98:5:0"
                }
              ],
              "canonicalName": "Relay",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 520,
              "linearizedBaseContracts": [
                520,
                543
              ],
              "name": "Relay",
              "nameLocation": "89:5:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "documentation": {
                    "id": 5,
                    "nodeType": "StructuredDocumentation",
                    "src": "110:40:0",
                    "text": "@dev Current set of business clients"
                  },
                  "functionSelector": "1466d019",
                  "id": 9,
                  "mutability": "mutable",
                  "name": "isBusiness",
                  "nameLocation": "187:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "155:42:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 8,
                    "keyType": {
                      "id": 6,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "163:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "155:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 7,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "174:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 10,
                    "nodeType": "StructuredDocumentation",
                    "src": "204:39:0",
                    "text": "@dev Not yet added business clients"
                  },
                  "functionSelector": "27b616cd",
                  "id": 14,
                  "mutability": "mutable",
                  "name": "pendingBusinesses",
                  "nameLocation": "280:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "248:49:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 13,
                    "keyType": {
                      "id": 11,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "256:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "248:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 12,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "267:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 15,
                    "nodeType": "StructuredDocumentation",
                    "src": "304:32:0",
                    "text": "@dev Current set of managers"
                  },
                  "functionSelector": "f3ae2415",
                  "id": 19,
                  "mutability": "mutable",
                  "name": "isManager",
                  "nameLocation": "373:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "341:41:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 18,
                    "keyType": {
                      "id": 16,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "349:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "341:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 17,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "360:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 20,
                    "nodeType": "StructuredDocumentation",
                    "src": "389:50:0",
                    "text": "@dev Rewards the relay received for operations"
                  },
                  "functionSelector": "9ec5a894",
                  "id": 22,
                  "mutability": "mutable",
                  "name": "rewards",
                  "nameLocation": "459:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "444:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 23,
                    "nodeType": "StructuredDocumentation",
                    "src": "473:39:0",
                    "text": "@dev Current set of charity clients"
                  },
                  "functionSelector": "e81ffbef",
                  "id": 27,
                  "mutability": "mutable",
                  "name": "isCharity",
                  "nameLocation": "549:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "517:41:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 26,
                    "keyType": {
                      "id": 24,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "525:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "517:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 25,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "536:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 28,
                    "nodeType": "StructuredDocumentation",
                    "src": "564:38:0",
                    "text": "@dev Not yet added charity clients"
                  },
                  "functionSelector": "db20a887",
                  "id": 32,
                  "mutability": "mutable",
                  "name": "pendingCharities",
                  "nameLocation": "639:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "607:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 31,
                    "keyType": {
                      "id": 29,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "615:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "607:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 30,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "626:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "fd99a746",
                  "id": 34,
                  "mutability": "mutable",
                  "name": "transactionsCount",
                  "nameLocation": "677:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "662:32:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "9ace38c2",
                  "id": 39,
                  "mutability": "mutable",
                  "name": "transactions",
                  "nameLocation": "740:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "701:51:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Transaction_$542_storage_$",
                    "typeString": "mapping(uint256 => struct Types.Transaction)"
                  },
                  "typeName": {
                    "id": 38,
                    "keyType": {
                      "id": 35,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "709:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "701:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Transaction_$542_storage_$",
                      "typeString": "mapping(uint256 => struct Types.Transaction)"
                    },
                    "valueType": {
                      "id": 37,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 36,
                        "name": "Transaction",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 542,
                        "src": "720:11:0"
                      },
                      "referencedDeclaration": 542,
                      "src": "720:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Transaction_$542_storage_ptr",
                        "typeString": "struct Types.Transaction"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 43,
                  "name": "ManagerAdded",
                  "nameLocation": "765:12:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 42,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 41,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "addedManager",
                        "nameLocation": "803:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 43,
                        "src": "787:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 40,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "787:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "777:44:0"
                  },
                  "src": "759:63:0"
                },
                {
                  "anonymous": false,
                  "id": 47,
                  "name": "ManagerRemoved",
                  "nameLocation": "834:14:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 45,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "addedManager",
                        "nameLocation": "874:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 47,
                        "src": "858:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 44,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "848:44:0"
                  },
                  "src": "828:65:0"
                },
                {
                  "anonymous": false,
                  "id": 53,
                  "name": "TransactionAdded",
                  "nameLocation": "905:16:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 49,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "transactionId",
                        "nameLocation": "947:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 53,
                        "src": "931:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 48,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 51,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "business",
                        "nameLocation": "986:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 53,
                        "src": "970:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 50,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "970:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "921:79:0"
                  },
                  "src": "899:102:0"
                },
                {
                  "anonymous": false,
                  "id": 59,
                  "name": "TransactionPaid",
                  "nameLocation": "1013:15:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 58,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 55,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "transactionId",
                        "nameLocation": "1054:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 59,
                        "src": "1038:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 54,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1038:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 57,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "business",
                        "nameLocation": "1093:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 59,
                        "src": "1077:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 56,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1077:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1028:79:0"
                  },
                  "src": "1007:101:0"
                },
                {
                  "anonymous": false,
                  "id": 65,
                  "name": "Withdrawal",
                  "nameLocation": "1120:10:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 64,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 61,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1148:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 65,
                        "src": "1140:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 60,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1140:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 63,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "manager",
                        "nameLocation": "1180:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 65,
                        "src": "1164:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 62,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1164:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1130:63:0"
                  },
                  "src": "1114:80:0"
                },
                {
                  "body": {
                    "id": 76,
                    "nodeType": "Block",
                    "src": "1229:42:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 70,
                              "name": "isManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "1239:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 72,
                            "indexExpression": {
                              "id": 71,
                              "name": "manager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1249:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1239:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 73,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1260:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1239:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 75,
                        "nodeType": "ExpressionStatement",
                        "src": "1239:25:0"
                      }
                    ]
                  },
                  "id": 77,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 68,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 67,
                        "mutability": "mutable",
                        "name": "manager",
                        "nameLocation": "1220:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 77,
                        "src": "1212:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 66,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1212:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1211:17:0"
                  },
                  "returnParameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1229:0:0"
                  },
                  "scope": 520,
                  "src": "1200:71:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 89,
                    "nodeType": "Block",
                    "src": "1356:51:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 83,
                              "name": "pendingBusinesses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "1366:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 85,
                            "indexExpression": {
                              "id": 84,
                              "name": "business",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "1384:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1366:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 86,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1396:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1366:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 88,
                        "nodeType": "ExpressionStatement",
                        "src": "1366:34:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 78,
                    "nodeType": "StructuredDocumentation",
                    "src": "1277:25:0",
                    "text": "businesses management"
                  },
                  "functionSelector": "e725a4be",
                  "id": 90,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addNewBusiness",
                  "nameLocation": "1316:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 81,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 80,
                        "mutability": "mutable",
                        "name": "business",
                        "nameLocation": "1339:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 90,
                        "src": "1331:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 79,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1331:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1330:18:0"
                  },
                  "returnParameters": {
                    "id": 82,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1356:0:0"
                  },
                  "scope": 520,
                  "src": "1307:100:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 109,
                    "nodeType": "Block",
                    "src": "1475:89:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 97,
                              "name": "pendingBusinesses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "1485:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 99,
                            "indexExpression": {
                              "id": 98,
                              "name": "business",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "1503:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1485:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1515:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1485:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 102,
                        "nodeType": "ExpressionStatement",
                        "src": "1485:35:0"
                      },
                      {
                        "expression": {
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 103,
                              "name": "isBusiness",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "1530:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 105,
                            "indexExpression": {
                              "id": 104,
                              "name": "business",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "1541:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1530:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1553:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1530:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 108,
                        "nodeType": "ExpressionStatement",
                        "src": "1530:27:0"
                      }
                    ]
                  },
                  "functionSelector": "fddd4387",
                  "id": 110,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 95,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 94,
                        "name": "onlyManager",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 485,
                        "src": "1463:11:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1463:11:0"
                    }
                  ],
                  "name": "approveBusiness",
                  "nameLocation": "1422:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 93,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 92,
                        "mutability": "mutable",
                        "name": "business",
                        "nameLocation": "1446:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 110,
                        "src": "1438:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 91,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1438:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1437:18:0"
                  },
                  "returnParameters": {
                    "id": 96,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1475:0:0"
                  },
                  "scope": 520,
                  "src": "1413:151:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 123,
                    "nodeType": "Block",
                    "src": "1631:45:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 117,
                              "name": "isBusiness",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "1641:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 119,
                            "indexExpression": {
                              "id": 118,
                              "name": "business",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 112,
                              "src": "1652:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1641:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1664:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1641:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 122,
                        "nodeType": "ExpressionStatement",
                        "src": "1641:28:0"
                      }
                    ]
                  },
                  "functionSelector": "419b96fa",
                  "id": 124,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 115,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 114,
                        "name": "onlyManager",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 485,
                        "src": "1619:11:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1619:11:0"
                    }
                  ],
                  "name": "removeBusiness",
                  "nameLocation": "1579:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 113,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 112,
                        "mutability": "mutable",
                        "name": "business",
                        "nameLocation": "1602:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "1594:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 111,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:18:0"
                  },
                  "returnParameters": {
                    "id": 116,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1631:0:0"
                  },
                  "scope": 520,
                  "src": "1570:106:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 136,
                    "nodeType": "Block",
                    "src": "1758:49:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 130,
                              "name": "pendingCharities",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "1768:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 132,
                            "indexExpression": {
                              "id": 131,
                              "name": "charity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 127,
                              "src": "1785:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1768:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1796:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1768:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 135,
                        "nodeType": "ExpressionStatement",
                        "src": "1768:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 125,
                    "nodeType": "StructuredDocumentation",
                    "src": "1682:24:0",
                    "text": "charities management"
                  },
                  "functionSelector": "166cd850",
                  "id": 137,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addNewCharity",
                  "nameLocation": "1720:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 128,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 127,
                        "mutability": "mutable",
                        "name": "charity",
                        "nameLocation": "1742:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 137,
                        "src": "1734:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 126,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1734:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1733:17:0"
                  },
                  "returnParameters": {
                    "id": 129,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1758:0:0"
                  },
                  "scope": 520,
                  "src": "1711:96:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 156,
                    "nodeType": "Block",
                    "src": "1873:85:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 144,
                              "name": "pendingCharities",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "1883:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 146,
                            "indexExpression": {
                              "id": 145,
                              "name": "charity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "1900:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1883:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1911:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1883:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 149,
                        "nodeType": "ExpressionStatement",
                        "src": "1883:33:0"
                      },
                      {
                        "expression": {
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 150,
                              "name": "isCharity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1926:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 152,
                            "indexExpression": {
                              "id": 151,
                              "name": "charity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "1936:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1926:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1947:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1926:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 155,
                        "nodeType": "ExpressionStatement",
                        "src": "1926:25:0"
                      }
                    ]
                  },
                  "functionSelector": "45810583",
                  "id": 157,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 142,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 141,
                        "name": "onlyManager",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 485,
                        "src": "1861:11:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1861:11:0"
                    }
                  ],
                  "name": "approveCharity",
                  "nameLocation": "1822:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 140,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 139,
                        "mutability": "mutable",
                        "name": "charity",
                        "nameLocation": "1845:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 157,
                        "src": "1837:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 138,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1837:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1836:17:0"
                  },
                  "returnParameters": {
                    "id": 143,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1873:0:0"
                  },
                  "scope": 520,
                  "src": "1813:145:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 170,
                    "nodeType": "Block",
                    "src": "2023:43:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 164,
                              "name": "isCharity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "2033:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 166,
                            "indexExpression": {
                              "id": 165,
                              "name": "charity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 159,
                              "src": "2043:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2033:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2054:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2033:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 169,
                        "nodeType": "ExpressionStatement",
                        "src": "2033:26:0"
                      }
                    ]
                  },
                  "functionSelector": "abefe591",
                  "id": 171,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 162,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 161,
                        "name": "onlyManager",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 485,
                        "src": "2011:11:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2011:11:0"
                    }
                  ],
                  "name": "removeCharity",
                  "nameLocation": "1973:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 160,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 159,
                        "mutability": "mutable",
                        "name": "charity",
                        "nameLocation": "1995:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 171,
                        "src": "1987:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 158,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1987:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1986:17:0"
                  },
                  "returnParameters": {
                    "id": 163,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2023:0:0"
                  },
                  "scope": 520,
                  "src": "1964:102:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 185,
                    "nodeType": "Block",
                    "src": "2155:42:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 179,
                              "name": "isManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "2165:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 181,
                            "indexExpression": {
                              "id": 180,
                              "name": "manager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 174,
                              "src": "2175:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2165:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2186:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2165:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 184,
                        "nodeType": "ExpressionStatement",
                        "src": "2165:25:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 172,
                    "nodeType": "StructuredDocumentation",
                    "src": "2072:22:0",
                    "text": "manager management"
                  },
                  "functionSelector": "2d06177a",
                  "id": 186,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 177,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 176,
                        "name": "onlyManager",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 485,
                        "src": "2143:11:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2143:11:0"
                    }
                  ],
                  "name": "addManager",
                  "nameLocation": "2108:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 175,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 174,
                        "mutability": "mutable",
                        "name": "manager",
                        "nameLocation": "2127:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "2119:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2119:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2118:17:0"
                  },
                  "returnParameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2155:0:0"
                  },
                  "scope": 520,
                  "src": "2099:98:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 295,
                    "nodeType": "Block",
                    "src": "2344:766:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 200,
                                  "name": "pieces",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 192,
                                  "src": "2362:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TransactionPiece_$528_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct Types.TransactionPiece memory[] memory"
                                  }
                                },
                                "id": 201,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2362:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2378:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2362:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4368617269746965732061726520656d707479",
                              "id": 204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2381:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e4bc7969c24c69922bc65ce3614f03bf1832ea0935377f20a73f8be5e473f4db",
                                "typeString": "literal_string \"Charities are empty\""
                              },
                              "value": "Charities are empty"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e4bc7969c24c69922bc65ce3614f03bf1832ea0935377f20a73f8be5e473f4db",
                                "typeString": "literal_string \"Charities are empty\""
                              }
                            ],
                            "id": 199,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2354:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2354:49:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 206,
                        "nodeType": "ExpressionStatement",
                        "src": "2354:49:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 208,
                                "name": "isBusiness",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9,
                                "src": "2421:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 210,
                              "indexExpression": {
                                "id": 209,
                                "name": "client",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 188,
                                "src": "2432:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2421:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436c69656e74206973206e6f74206f757220636c69656e74",
                              "id": 211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2441:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c6ab5e45c4ffc5ecd741bf25ae1c177fe12ad8cf83ddd74d1228b4ec6c26128c",
                                "typeString": "literal_string \"Client is not our client\""
                              },
                              "value": "Client is not our client"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c6ab5e45c4ffc5ecd741bf25ae1c177fe12ad8cf83ddd74d1228b4ec6c26128c",
                                "typeString": "literal_string \"Client is not our client\""
                              }
                            ],
                            "id": 207,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2413:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2413:55:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 213,
                        "nodeType": "ExpressionStatement",
                        "src": "2413:55:0"
                      },
                      {
                        "expression": {
                          "id": 219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 214,
                                "name": "transactions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39,
                                "src": "2479:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Transaction_$542_storage_$",
                                  "typeString": "mapping(uint256 => struct Types.Transaction storage ref)"
                                }
                              },
                              "id": 216,
                              "indexExpression": {
                                "id": 215,
                                "name": "transactionsCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "2492:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2479:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Transaction_$542_storage",
                                "typeString": "struct Types.Transaction storage ref"
                              }
                            },
                            "id": 217,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "client",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 530,
                            "src": "2479:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 218,
                            "name": "client",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 188,
                            "src": "2520:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2479:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 220,
                        "nodeType": "ExpressionStatement",
                        "src": "2479:47:0"
                      },
                      {
                        "expression": {
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 221,
                                "name": "transactions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39,
                                "src": "2536:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Transaction_$542_storage_$",
                                  "typeString": "mapping(uint256 => struct Types.Transaction storage ref)"
                                }
                              },
                              "id": 223,
                              "indexExpression": {
                                "id": 222,
                                "name": "transactionsCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "2549:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2536:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Transaction_$542_storage",
                                "typeString": "struct Types.Transaction storage ref"
                              }
                            },
                            "id": 224,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "fee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 539,
                            "src": "2536:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 225,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 194,
                            "src": "2574:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2536:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 227,
                        "nodeType": "ExpressionStatement",
                        "src": "2536:41:0"
                      },
                      {
                        "expression": {
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 228,
                                "name": "transactions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39,
                                "src": "2587:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Transaction_$542_storage_$",
                                  "typeString": "mapping(uint256 => struct Types.Transaction storage ref)"
                                }
                              },
                              "id": 230,
                              "indexExpression": {
                                "id": 229,
                                "name": "transactionsCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "2600:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2587:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Transaction_$542_storage",
                                "typeString": "struct Types.Transaction storage ref"
                              }
                            },
                            "id": 231,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "piecesCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 537,
                            "src": "2587:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 232,
                              "name": "pieces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "2633:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TransactionPiece_$528_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Types.TransactionPiece memory[] memory"
                              }
                            },
                            "id": 233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2633:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2587:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 235,
                        "nodeType": "ExpressionStatement",
                        "src": "2587:59:0"
                      },
                      {
                        "expression": {
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 236,
                                "name": "transactions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39,
                                "src": "2656:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Transaction_$542_storage_$",
                                  "typeString": "mapping(uint256 => struct Types.Transaction storage ref)"
                                }
                              },
                              "id": 238,
                              "indexExpression": {
                                "id": 237,
                                "name": "transactionsCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "2669:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2656:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Transaction_$542_storage",
                                "typeString": "struct Types.Transaction storage ref"
                              }
                            },
                            "id": 239,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "paid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 541,
                            "src": "2656:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2695:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2656:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 242,
                        "nodeType": "ExpressionStatement",
                        "src": "2656:44:0"
                      },
                      {
                        "body": {
                          "id": 285,
                          "nodeType": "Block",
                          "src": "2755:261:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 255,
                                      "name": "isCharity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 27,
                                      "src": "2777:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 260,
                                    "indexExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 256,
                                          "name": "pieces",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 192,
                                          "src": "2787:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_TransactionPiece_$528_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct Types.TransactionPiece memory[] memory"
                                          }
                                        },
                                        "id": 258,
                                        "indexExpression": {
                                          "id": 257,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 244,
                                          "src": "2794:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2787:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TransactionPiece_$528_memory_ptr",
                                          "typeString": "struct Types.TransactionPiece memory"
                                        }
                                      },
                                      "id": 259,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "destination",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 525,
                                      "src": "2787:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2777:32:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4f6e65206f66207468652064657374696e6174696f6e73206973206e6f7420616e20617070726f7665642063686172697479",
                                    "id": 261,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2811:52:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_59f6d684760f156897c40dbf90fd6be2ffe21046acca4d964e635b9d11834727",
                                      "typeString": "literal_string \"One of the destinations is not an approved charity\""
                                    },
                                    "value": "One of the destinations is not an approved charity"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_59f6d684760f156897c40dbf90fd6be2ffe21046acca4d964e635b9d11834727",
                                      "typeString": "literal_string \"One of the destinations is not an approved charity\""
                                    }
                                  ],
                                  "id": 254,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "2769:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 262,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2769:95:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 263,
                              "nodeType": "ExpressionStatement",
                              "src": "2769:95:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 270,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 265,
                                          "name": "pieces",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 192,
                                          "src": "2886:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_TransactionPiece_$528_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct Types.TransactionPiece memory[] memory"
                                          }
                                        },
                                        "id": 267,
                                        "indexExpression": {
                                          "id": 266,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 244,
                                          "src": "2893:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2886:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TransactionPiece_$528_memory_ptr",
                                          "typeString": "struct Types.TransactionPiece memory"
                                        }
                                      },
                                      "id": 268,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 527,
                                      "src": "2886:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 269,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2904:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "2886:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "446f6e6174696f6e732073686f756c64206265206e6f6e2d7a65726f",
                                    "id": 271,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2907:30:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c70a41f76464a3580bf1b34c897bf8b0c04d5880c3a2e5bdaddd57d2b332b614",
                                      "typeString": "literal_string \"Donations should be non-zero\""
                                    },
                                    "value": "Donations should be non-zero"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c70a41f76464a3580bf1b34c897bf8b0c04d5880c3a2e5bdaddd57d2b332b614",
                                      "typeString": "literal_string \"Donations should be non-zero\""
                                    }
                                  ],
                                  "id": 264,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "2878:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 272,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2878:60:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 273,
                              "nodeType": "ExpressionStatement",
                              "src": "2878:60:0"
                            },
                            {
                              "expression": {
                                "id": 283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 274,
                                        "name": "transactions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 39,
                                        "src": "2952:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Transaction_$542_storage_$",
                                          "typeString": "mapping(uint256 => struct Types.Transaction storage ref)"
                                        }
                                      },
                                      "id": 276,
                                      "indexExpression": {
                                        "id": 275,
                                        "name": "transactionsCount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 34,
                                        "src": "2965:17:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2952:31:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Transaction_$542_storage",
                                        "typeString": "struct Types.Transaction storage ref"
                                      }
                                    },
                                    "id": 277,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "pieces",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 535,
                                    "src": "2952:38:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TransactionPiece_$528_storage_$",
                                      "typeString": "mapping(uint256 => struct Types.TransactionPiece storage ref)"
                                    }
                                  },
                                  "id": 279,
                                  "indexExpression": {
                                    "id": 278,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 244,
                                    "src": "2991:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2952:41:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TransactionPiece_$528_storage",
                                    "typeString": "struct Types.TransactionPiece storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 280,
                                    "name": "pieces",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 192,
                                    "src": "2996:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TransactionPiece_$528_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Types.TransactionPiece memory[] memory"
                                    }
                                  },
                                  "id": 282,
                                  "indexExpression": {
                                    "id": 281,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 244,
                                    "src": "3003:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2996:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TransactionPiece_$528_memory_ptr",
                                    "typeString": "struct Types.TransactionPiece memory"
                                  }
                                },
                                "src": "2952:53:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TransactionPiece_$528_storage",
                                  "typeString": "struct Types.TransactionPiece storage ref"
                                }
                              },
                              "id": 284,
                              "nodeType": "ExpressionStatement",
                              "src": "2952:53:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 247,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 244,
                            "src": "2731:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 248,
                              "name": "pieces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "2735:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TransactionPiece_$528_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Types.TransactionPiece memory[] memory"
                              }
                            },
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2735:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2731:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 286,
                        "initializationExpression": {
                          "assignments": [
                            244
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 244,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2724:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 286,
                              "src": "2716:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 243,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2716:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 246,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2728:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2716:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "2750:3:0",
                            "subExpression": {
                              "id": 251,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 244,
                              "src": "2750:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 253,
                          "nodeType": "ExpressionStatement",
                          "src": "2750:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "2711:305:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 288,
                              "name": "transactionsCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "3048:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 289,
                              "name": "client",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 188,
                              "src": "3067:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 287,
                            "name": "TransactionAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "3031:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3031:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 291,
                        "nodeType": "EmitStatement",
                        "src": "3026:48:0"
                      },
                      {
                        "expression": {
                          "id": 293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "3084:19:0",
                          "subExpression": {
                            "id": 292,
                            "name": "transactionsCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "3084:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 294,
                        "nodeType": "ExpressionStatement",
                        "src": "3084:19:0"
                      }
                    ]
                  },
                  "functionSelector": "1702e2dc",
                  "id": 296,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 197,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 196,
                        "name": "onlyManager",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 485,
                        "src": "2332:11:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2332:11:0"
                    }
                  ],
                  "name": "generateTransaction",
                  "nameLocation": "2212:19:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 188,
                        "mutability": "mutable",
                        "name": "client",
                        "nameLocation": "2249:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "2241:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 187,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2241:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "pieces",
                        "nameLocation": "2291:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "2265:32:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TransactionPiece_$528_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Types.TransactionPiece[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 190,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 189,
                              "name": "TransactionPiece",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 528,
                              "src": "2265:16:0"
                            },
                            "referencedDeclaration": 528,
                            "src": "2265:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TransactionPiece_$528_storage_ptr",
                              "typeString": "struct Types.TransactionPiece"
                            }
                          },
                          "id": 191,
                          "nodeType": "ArrayTypeName",
                          "src": "2265:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TransactionPiece_$528_storage_$dyn_storage_ptr",
                            "typeString": "struct Types.TransactionPiece[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 194,
                        "mutability": "mutable",
                        "name": "fee",
                        "nameLocation": "2315:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "2307:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2307:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2231:93:0"
                  },
                  "returnParameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2344:0:0"
                  },
                  "scope": 520,
                  "src": "2203:907:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 410,
                    "nodeType": "Block",
                    "src": "3242:829:0",
                    "statements": [
                      {
                        "assignments": [
                          308
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 308,
                            "mutability": "mutable",
                            "name": "transaction",
                            "nameLocation": "3272:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 410,
                            "src": "3252:31:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Transaction_$542_storage_ptr",
                              "typeString": "struct Types.Transaction"
                            },
                            "typeName": {
                              "id": 307,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 306,
                                "name": "Transaction",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 542,
                                "src": "3252:11:0"
                              },
                              "referencedDeclaration": 542,
                              "src": "3252:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Transaction_$542_storage_ptr",
                                "typeString": "struct Types.Transaction"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 312,
                        "initialValue": {
                          "baseExpression": {
                            "id": 309,
                            "name": "transactions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "3286:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Transaction_$542_storage_$",
                              "typeString": "mapping(uint256 => struct Types.Transaction storage ref)"
                            }
                          },
                          "id": 311,
                          "indexExpression": {
                            "id": 310,
                            "name": "transactionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "3299:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3286:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Transaction_$542_storage",
                            "typeString": "struct Types.Transaction storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3252:61:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 314,
                                  "name": "transaction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 308,
                                  "src": "3332:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Transaction_$542_storage_ptr",
                                    "typeString": "struct Types.Transaction storage pointer"
                                  }
                                },
                                "id": 315,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "client",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 530,
                                "src": "3332:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 316,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3354:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3354:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3332:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546865207472616e73616374696f6e20697320666f7220616e6f7468657220636c69656e74",
                              "id": 319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3366:39:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bd0dc32ab7ed1b97da9d2212661f5c93367cc4e24b898aa1bcc9e197f18e36ca",
                                "typeString": "literal_string \"The transaction is for another client\""
                              },
                              "value": "The transaction is for another client"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bd0dc32ab7ed1b97da9d2212661f5c93367cc4e24b898aa1bcc9e197f18e36ca",
                                "typeString": "literal_string \"The transaction is for another client\""
                              }
                            ],
                            "id": 313,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3324:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3324:82:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 321,
                        "nodeType": "ExpressionStatement",
                        "src": "3324:82:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "3424:17:0",
                              "subExpression": {
                                "expression": {
                                  "id": 323,
                                  "name": "transaction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 308,
                                  "src": "3425:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Transaction_$542_storage_ptr",
                                    "typeString": "struct Types.Transaction storage pointer"
                                  }
                                },
                                "id": 324,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "paid",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 541,
                                "src": "3425:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e73616374696f6e206973207061696420616c7265616479",
                              "id": 326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3443:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_42a23b32e1997957967e5eaec75b8a77a5536aba8ef1e7cfdca469579be7d5a1",
                                "typeString": "literal_string \"Transaction is paid already\""
                              },
                              "value": "Transaction is paid already"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_42a23b32e1997957967e5eaec75b8a77a5536aba8ef1e7cfdca469579be7d5a1",
                                "typeString": "literal_string \"Transaction is paid already\""
                              }
                            ],
                            "id": 322,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3416:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3416:57:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 328,
                        "nodeType": "ExpressionStatement",
                        "src": "3416:57:0"
                      },
                      {
                        "assignments": [
                          330
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 330,
                            "mutability": "mutable",
                            "name": "totalPayment",
                            "nameLocation": "3492:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 410,
                            "src": "3484:20:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 329,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3484:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 332,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3507:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3484:24:0"
                      },
                      {
                        "body": {
                          "id": 352,
                          "nodeType": "Block",
                          "src": "3572:68:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 344,
                                  "name": "totalPayment",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 330,
                                  "src": "3586:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 345,
                                        "name": "transaction",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 308,
                                        "src": "3602:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Transaction_$542_storage_ptr",
                                          "typeString": "struct Types.Transaction storage pointer"
                                        }
                                      },
                                      "id": 346,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "pieces",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 535,
                                      "src": "3602:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TransactionPiece_$528_storage_$",
                                        "typeString": "mapping(uint256 => struct Types.TransactionPiece storage ref)"
                                      }
                                    },
                                    "id": 348,
                                    "indexExpression": {
                                      "id": 347,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 334,
                                      "src": "3621:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3602:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TransactionPiece_$528_storage",
                                      "typeString": "struct Types.TransactionPiece storage ref"
                                    }
                                  },
                                  "id": 349,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 527,
                                  "src": "3602:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3586:43:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 351,
                              "nodeType": "ExpressionStatement",
                              "src": "3586:43:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 337,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 334,
                            "src": "3538:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 338,
                              "name": "transaction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 308,
                              "src": "3542:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Transaction_$542_storage_ptr",
                                "typeString": "struct Types.Transaction storage pointer"
                              }
                            },
                            "id": 339,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "piecesCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 537,
                            "src": "3542:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3538:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 353,
                        "initializationExpression": {
                          "assignments": [
                            334
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 334,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3531:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 353,
                              "src": "3523:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 333,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3523:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 336,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3535:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3523:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "3567:3:0",
                            "subExpression": {
                              "id": 341,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 334,
                              "src": "3567:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 343,
                          "nodeType": "ExpressionStatement",
                          "src": "3567:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "3518:122:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 355,
                                  "name": "totalPayment",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 330,
                                  "src": "3658:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "expression": {
                                    "id": 356,
                                    "name": "transaction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 308,
                                    "src": "3673:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Transaction_$542_storage_ptr",
                                      "typeString": "struct Types.Transaction storage pointer"
                                    }
                                  },
                                  "id": 357,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "fee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 539,
                                  "src": "3673:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3658:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 359,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3692:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "3692:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3658:43:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5468652076616c7565206973206e6f7420656e6f75676820746f20636f76657220746865207472616e73616374696f6e",
                              "id": 362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3703:50:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d9076ece29b2a72c6dc53197c8c0c74503ef75330f9143b5293adcd7920ceedc",
                                "typeString": "literal_string \"The value is not enough to cover the transaction\""
                              },
                              "value": "The value is not enough to cover the transaction"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d9076ece29b2a72c6dc53197c8c0c74503ef75330f9143b5293adcd7920ceedc",
                                "typeString": "literal_string \"The value is not enough to cover the transaction\""
                              }
                            ],
                            "id": 354,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3650:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3650:104:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 364,
                        "nodeType": "ExpressionStatement",
                        "src": "3650:104:0"
                      },
                      {
                        "body": {
                          "id": 389,
                          "nodeType": "Block",
                          "src": "3819:101:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 377,
                                          "name": "transaction",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 308,
                                          "src": "3846:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Transaction_$542_storage_ptr",
                                            "typeString": "struct Types.Transaction storage pointer"
                                          }
                                        },
                                        "id": 378,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "pieces",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 535,
                                        "src": "3846:18:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TransactionPiece_$528_storage_$",
                                          "typeString": "mapping(uint256 => struct Types.TransactionPiece storage ref)"
                                        }
                                      },
                                      "id": 380,
                                      "indexExpression": {
                                        "id": 379,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 366,
                                        "src": "3865:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3846:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TransactionPiece_$528_storage",
                                        "typeString": "struct Types.TransactionPiece storage ref"
                                      }
                                    },
                                    "id": 381,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "destination",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 525,
                                    "src": "3846:33:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 382,
                                          "name": "transaction",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 308,
                                          "src": "3881:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Transaction_$542_storage_ptr",
                                            "typeString": "struct Types.Transaction storage pointer"
                                          }
                                        },
                                        "id": 383,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "pieces",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 535,
                                        "src": "3881:18:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TransactionPiece_$528_storage_$",
                                          "typeString": "mapping(uint256 => struct Types.TransactionPiece storage ref)"
                                        }
                                      },
                                      "id": 385,
                                      "indexExpression": {
                                        "id": 384,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 366,
                                        "src": "3900:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3881:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TransactionPiece_$528_storage",
                                        "typeString": "struct Types.TransactionPiece storage ref"
                                      }
                                    },
                                    "id": 386,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 527,
                                    "src": "3881:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 376,
                                  "name": "_sendFundsTo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 471,
                                  "src": "3833:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 387,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3833:76:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 388,
                              "nodeType": "ExpressionStatement",
                              "src": "3833:76:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 369,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "3785:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 370,
                              "name": "transaction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 308,
                              "src": "3789:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Transaction_$542_storage_ptr",
                                "typeString": "struct Types.Transaction storage pointer"
                              }
                            },
                            "id": 371,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "piecesCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 537,
                            "src": "3789:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3785:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 390,
                        "initializationExpression": {
                          "assignments": [
                            366
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 366,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3778:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 390,
                              "src": "3770:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 365,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3770:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 368,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3782:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3770:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "3814:3:0",
                            "subExpression": {
                              "id": 373,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "3814:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 375,
                          "nodeType": "ExpressionStatement",
                          "src": "3814:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "3765:155:0"
                      },
                      {
                        "expression": {
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 391,
                              "name": "transaction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 308,
                              "src": "3930:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Transaction_$542_storage_ptr",
                                "typeString": "struct Types.Transaction storage pointer"
                              }
                            },
                            "id": 393,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "paid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 541,
                            "src": "3930:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3949:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3930:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 396,
                        "nodeType": "ExpressionStatement",
                        "src": "3930:23:0"
                      },
                      {
                        "expression": {
                          "id": 402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 397,
                            "name": "rewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "3963:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 398,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3974:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "3974:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 400,
                              "name": "totalPayment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 330,
                              "src": "3986:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3974:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3963:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 403,
                        "nodeType": "ExpressionStatement",
                        "src": "3963:35:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 405,
                              "name": "transactionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 298,
                              "src": "4030:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 406,
                                "name": "transaction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 308,
                                "src": "4045:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Transaction_$542_storage_ptr",
                                  "typeString": "struct Types.Transaction storage pointer"
                                }
                              },
                              "id": 407,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "client",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 530,
                              "src": "4045:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 404,
                            "name": "TransactionPaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "4014:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4014:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 409,
                        "nodeType": "EmitStatement",
                        "src": "4009:55:0"
                      }
                    ]
                  },
                  "functionSelector": "ee22610b",
                  "id": 411,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 301,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 300,
                        "name": "onlyBusiness",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 499,
                        "src": "3196:12:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3196:12:0"
                    },
                    {
                      "arguments": [
                        {
                          "id": 303,
                          "name": "transactionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "3227:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 304,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 302,
                        "name": "transactionExists",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 519,
                        "src": "3209:17:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3209:32:0"
                    }
                  ],
                  "name": "executeTransaction",
                  "nameLocation": "3125:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 299,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 298,
                        "mutability": "mutable",
                        "name": "transactionId",
                        "nameLocation": "3161:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "3153:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 297,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3153:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3143:37:0"
                  },
                  "returnParameters": {
                    "id": 305,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3242:0:0"
                  },
                  "scope": 520,
                  "src": "3116:955:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 439,
                    "nodeType": "Block",
                    "src": "4116:172:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 417,
                                "name": "rewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "4134:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 418,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4144:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4134:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7468696e6720746f207769746864726177",
                              "id": 420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4147:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
                                "typeString": "literal_string \"Nothing to withdraw\""
                              },
                              "value": "Nothing to withdraw"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
                                "typeString": "literal_string \"Nothing to withdraw\""
                              }
                            ],
                            "id": 416,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4126:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4126:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 422,
                        "nodeType": "ExpressionStatement",
                        "src": "4126:43:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 424,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "4196:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 425,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4205:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4205:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 423,
                            "name": "Withdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "4185:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4185:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 428,
                        "nodeType": "EmitStatement",
                        "src": "4180:36:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 430,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4240:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 431,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4240:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 432,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "4252:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 429,
                            "name": "_sendFundsTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 471,
                            "src": "4227:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4227:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 434,
                        "nodeType": "ExpressionStatement",
                        "src": "4227:33:0"
                      },
                      {
                        "expression": {
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 435,
                            "name": "rewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "4270:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4280:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4270:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 438,
                        "nodeType": "ExpressionStatement",
                        "src": "4270:11:0"
                      }
                    ]
                  },
                  "functionSelector": "3ccfd60b",
                  "id": 440,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 414,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 413,
                        "name": "onlyManager",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 485,
                        "src": "4104:11:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4104:11:0"
                    }
                  ],
                  "name": "withdraw",
                  "nameLocation": "4086:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 412,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4094:2:0"
                  },
                  "returnParameters": {
                    "id": 415,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4116:0:0"
                  },
                  "scope": 520,
                  "src": "4077:211:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 443,
                    "nodeType": "Block",
                    "src": "4322:2:0",
                    "statements": []
                  },
                  "id": 444,
                  "implemented": true,
                  "kind": "fallback",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 441,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4302:2:0"
                  },
                  "returnParameters": {
                    "id": 442,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4322:0:0"
                  },
                  "scope": 520,
                  "src": "4294:30:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 447,
                    "nodeType": "Block",
                    "src": "4357:2:0",
                    "statements": []
                  },
                  "id": 448,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 445,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4337:2:0"
                  },
                  "returnParameters": {
                    "id": 446,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4357:0:0"
                  },
                  "scope": 520,
                  "src": "4330:29:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 470,
                    "nodeType": "Block",
                    "src": "4512:107:0",
                    "statements": [
                      {
                        "assignments": [
                          457,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 457,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "4528:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 470,
                            "src": "4523:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 456,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4523:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 464,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4561:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 458,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 451,
                                "src": "4538:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "4538:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 460,
                                "name": "_funds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 453,
                                "src": "4553:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "4538:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4538:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4522:42:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 466,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "4583:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e642066756e6473",
                              "id": 467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4589:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6ccad9b42603510aa2281dc09de0f29ec7380180d77b1d766639429fee61ba0f",
                                "typeString": "literal_string \"Failed to send funds\""
                              },
                              "value": "Failed to send funds"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6ccad9b42603510aa2281dc09de0f29ec7380180d77b1d766639429fee61ba0f",
                                "typeString": "literal_string \"Failed to send funds\""
                              }
                            ],
                            "id": 465,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4575:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4575:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 469,
                        "nodeType": "ExpressionStatement",
                        "src": "4575:37:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 449,
                    "nodeType": "StructuredDocumentation",
                    "src": "4365:83:0",
                    "text": " @dev Internal function to send excess rewards back to the bridge"
                  },
                  "id": 471,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_sendFundsTo",
                  "nameLocation": "4462:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 454,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 451,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4483:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 471,
                        "src": "4475:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 450,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4475:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "_funds",
                        "nameLocation": "4495:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 471,
                        "src": "4487:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4487:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4474:28:0"
                  },
                  "returnParameters": {
                    "id": 455,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4512:0:0"
                  },
                  "scope": 520,
                  "src": "4453:166:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 484,
                    "nodeType": "Block",
                    "src": "4648:100:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4662:22:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 473,
                              "name": "isManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "4663:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 476,
                            "indexExpression": {
                              "expression": {
                                "id": 474,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4673:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4673:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4663:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 482,
                        "nodeType": "IfStatement",
                        "src": "4658:72:0",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "53656e646572206973206e6f742074686520617070726f766564206d616e61676572",
                                "id": 479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4693:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5e95d684f42cab2ff15133fcd43e1d5db9de86446693f530969878d05b93d4de",
                                  "typeString": "literal_string \"Sender is not the approved manager\""
                                },
                                "value": "Sender is not the approved manager"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5e95d684f42cab2ff15133fcd43e1d5db9de86446693f530969878d05b93d4de",
                                  "typeString": "literal_string \"Sender is not the approved manager\""
                                }
                              ],
                              "id": 478,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -19,
                                -19
                              ],
                              "referencedDeclaration": -19,
                              "src": "4686:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4686:44:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 481,
                          "nodeType": "ExpressionStatement",
                          "src": "4686:44:0"
                        }
                      },
                      {
                        "id": 483,
                        "nodeType": "PlaceholderStatement",
                        "src": "4740:1:0"
                      }
                    ]
                  },
                  "id": 485,
                  "name": "onlyManager",
                  "nameLocation": "4634:11:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 472,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4645:2:0"
                  },
                  "src": "4625:123:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 498,
                    "nodeType": "Block",
                    "src": "4778:102:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4792:23:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 487,
                              "name": "isBusiness",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "4793:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 490,
                            "indexExpression": {
                              "expression": {
                                "id": 488,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4804:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4804:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4793:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 496,
                        "nodeType": "IfStatement",
                        "src": "4788:74:0",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "53656e646572206973206e6f742074686520617070726f76656420627573696e657373",
                                "id": 493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4824:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_baa064595565d0eaa4a85ec26857c4753d05b8165d8c48d267ec62a331e12801",
                                  "typeString": "literal_string \"Sender is not the approved business\""
                                },
                                "value": "Sender is not the approved business"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_baa064595565d0eaa4a85ec26857c4753d05b8165d8c48d267ec62a331e12801",
                                  "typeString": "literal_string \"Sender is not the approved business\""
                                }
                              ],
                              "id": 492,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -19,
                                -19
                              ],
                              "referencedDeclaration": -19,
                              "src": "4817:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4817:45:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 495,
                          "nodeType": "ExpressionStatement",
                          "src": "4817:45:0"
                        }
                      },
                      {
                        "id": 497,
                        "nodeType": "PlaceholderStatement",
                        "src": "4872:1:0"
                      }
                    ]
                  },
                  "id": 499,
                  "name": "onlyBusiness",
                  "nameLocation": "4763:12:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 486,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4775:2:0"
                  },
                  "src": "4754:126:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 518,
                    "nodeType": "Block",
                    "src": "4936:130:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 503,
                                "name": "transactions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39,
                                "src": "4950:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Transaction_$542_storage_$",
                                  "typeString": "mapping(uint256 => struct Types.Transaction storage ref)"
                                }
                              },
                              "id": 505,
                              "indexExpression": {
                                "id": 504,
                                "name": "transactionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 501,
                                "src": "4963:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4950:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Transaction_$542_storage",
                                "typeString": "struct Types.Transaction storage ref"
                              }
                            },
                            "id": 506,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "client",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 530,
                            "src": "4950:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 509,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4996:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4988:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 507,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4988:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4988:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4950:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 516,
                        "nodeType": "IfStatement",
                        "src": "4946:102:0",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "5472616e73616374696f6e20646f65736e27742065786973742e",
                                "id": 513,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5019:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c42b03636ac1dbce3b94c6a259bf96be5c0cb587dea1c106a6e08b351ca8f844",
                                  "typeString": "literal_string \"Transaction doesn't exist.\""
                                },
                                "value": "Transaction doesn't exist."
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c42b03636ac1dbce3b94c6a259bf96be5c0cb587dea1c106a6e08b351ca8f844",
                                  "typeString": "literal_string \"Transaction doesn't exist.\""
                                }
                              ],
                              "id": 512,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -19,
                                -19
                              ],
                              "referencedDeclaration": -19,
                              "src": "5012:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5012:36:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 515,
                          "nodeType": "ExpressionStatement",
                          "src": "5012:36:0"
                        }
                      },
                      {
                        "id": 517,
                        "nodeType": "PlaceholderStatement",
                        "src": "5058:1:0"
                      }
                    ]
                  },
                  "id": 519,
                  "name": "transactionExists",
                  "nameLocation": "4895:17:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 502,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 501,
                        "mutability": "mutable",
                        "name": "transactionId",
                        "nameLocation": "4921:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 519,
                        "src": "4913:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 500,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4913:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4912:23:0"
                  },
                  "src": "4886:180:0",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 521,
              "src": "80:4988:0",
              "usedErrors": []
            }
          ],
          "src": "32:5037:0"
        },
        "id": 0
      },
      "contracts/Types.sol": {
        "ast": {
          "absolutePath": "contracts/Types.sol",
          "exportedSymbols": {
            "Types": [
              543
            ]
          },
          "id": 544,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 522,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:1"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Types",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 523,
                "nodeType": "StructuredDocumentation",
                "src": "57:66:1",
                "text": "@title Types\n @dev Source file that keeps type definitions"
              },
              "fullyImplemented": true,
              "id": 543,
              "linearizedBaseContracts": [
                543
              ],
              "name": "Types",
              "nameLocation": "141:5:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Types.TransactionPiece",
                  "id": 528,
                  "members": [
                    {
                      "constant": false,
                      "id": 525,
                      "mutability": "mutable",
                      "name": "destination",
                      "nameLocation": "271:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 528,
                      "src": "263:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 524,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "263:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 527,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "300:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 528,
                      "src": "292:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 526,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "292:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "TransactionPiece",
                  "nameLocation": "236:16:1",
                  "nodeType": "StructDefinition",
                  "scope": 543,
                  "src": "229:83:1",
                  "visibility": "public"
                },
                {
                  "canonicalName": "Types.Transaction",
                  "id": 542,
                  "members": [
                    {
                      "constant": false,
                      "id": 530,
                      "mutability": "mutable",
                      "name": "client",
                      "nameLocation": "430:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 542,
                      "src": "422:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 529,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "422:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 535,
                      "mutability": "mutable",
                      "name": "pieces",
                      "nameLocation": "483:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 542,
                      "src": "446:43:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TransactionPiece_$528_storage_$",
                        "typeString": "mapping(uint256 => struct Types.TransactionPiece)"
                      },
                      "typeName": {
                        "id": 534,
                        "keyType": {
                          "id": 531,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "454:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "446:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TransactionPiece_$528_storage_$",
                          "typeString": "mapping(uint256 => struct Types.TransactionPiece)"
                        },
                        "valueType": {
                          "id": 533,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 532,
                            "name": "TransactionPiece",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 528,
                            "src": "465:16:1"
                          },
                          "referencedDeclaration": 528,
                          "src": "465:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TransactionPiece_$528_storage_ptr",
                            "typeString": "struct Types.TransactionPiece"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 537,
                      "mutability": "mutable",
                      "name": "piecesCount",
                      "nameLocation": "507:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 542,
                      "src": "499:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 536,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "499:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 539,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "536:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 542,
                      "src": "528:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 538,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "528:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 541,
                      "mutability": "mutable",
                      "name": "paid",
                      "nameLocation": "554:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 542,
                      "src": "549:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 540,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "549:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Transaction",
                  "nameLocation": "400:11:1",
                  "nodeType": "StructDefinition",
                  "scope": 543,
                  "src": "393:172:1",
                  "visibility": "public"
                }
              ],
              "scope": 544,
              "src": "123:444:1",
              "usedErrors": []
            }
          ],
          "src": "32:536:1"
        },
        "id": 1
      }
    }
  }
}
